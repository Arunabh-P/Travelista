{"version":3,"file":"static/js/377.c543cc02.chunk.js","mappings":"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","sources":["Components/user/Home/HomeComponents/RightSideComponents/UsersList.jsx","Components/user/StoryCropper/getCroppedImg.js","Components/user/StoryCropper/CropImage.js","Components/user/Story/StoryComponents/AddStory.jsx","Actions/Story.js","Components/user/Story/StoryComponents/FollowersStories.jsx","Components/user/Story/Story.jsx","Components/user/Home/HomeComponents/CenterComponents/CenterComponent.jsx","Components/user/Home/HomeComponents/LeftSideComponents/UserCard.jsx","Components/user/Home/Home.jsx","Components/user/NewPost/NewPost.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Typography } from \"@mui/material\"\r\nimport \"./UsersList.css\"\r\nimport User from '../../../User/User'\r\nimport { useSelector } from \"react-redux\"\r\nimport { Skeleton } from \"@mui/material\";\r\n\r\nfunction UsersList() {\r\n\r\n  const { users, loading } = useSelector(\r\n    (state) => state.allUsers\r\n  )\r\n  const { user } = useSelector(\r\n    (state) => state.user\r\n  )\r\n\r\n  let others\r\n  if (users !== undefined) {\r\n    others = users.filter((usr) => {\r\n      if (!usr.followers.includes(user._id) && usr._id !== user._id) {\r\n        return usr\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className='users-list-to-show'>\r\n      <h4>Connect with travelista family</h4>\r\n      {loading &&\r\n        [...Array(12)].map(() => {\r\n\r\n          return (\r\n            <div className=\"row d-flex \">\r\n              <div className=\"col-8\">\r\n                <div className=\"users-home-list\">\r\n                  <Skeleton variant=\"circular\" className=\"user-home-list-avatar\" />\r\n                  <Skeleton variant=\"text\" width={280} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          )\r\n        })}\r\n      {others && others.length > 0 ? (\r\n\r\n        others\r\n          .sort(() => Math.random() - 0.5)\r\n          .slice(0, 7)\r\n          .map((user) => (\r\n            <User\r\n              key={user._id}\r\n              userId={user._id}\r\n              name={user.name}\r\n              avatar={user.avatar.url}\r\n            />\r\n          ))\r\n      ) : (<Typography variant='h6' >No Users yet</Typography>\r\n      )}\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default UsersList","export function getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas')\r\n    const scaleX = image.naturalWidth / image.width\r\n    const scaleY = image.naturalHeight / image.height\r\n    canvas.width = crop.width\r\n    canvas.height = crop.height\r\n    const ctx = canvas.getContext('2d')\r\n    const pixelRatio = window.devicePixelRatio\r\n    canvas.width = crop.width * pixelRatio\r\n    canvas.height = crop.height * pixelRatio\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0)\r\n    ctx.imageSmoothingQuality = 'high'\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    )\r\n    const base64Image = canvas.toDataURL(\"image/jpeg\");\r\n    return base64Image;\r\n  }","import React, { useRef } from 'react'\r\nimport { Button, Col, Container } from 'react-bootstrap'\r\nimport Cropper from 'react-cropper'\r\nimport 'cropperjs/dist/cropper.css'\r\nimport { getCroppedImg } from './getCroppedImg'\r\n\r\nconst CropImage = ({ src, imageCallback, closeHander }) => {\r\n  const cropperRef = useRef(null)\r\n  const cropDetailsRef = useRef(null)\r\n  const onCrop = (e) => (cropDetailsRef.current = e.detail)\r\n  const clickHndler = async () => {\r\n    const croppedImage = await getCroppedImg(\r\n      cropperRef.current,\r\n      cropDetailsRef.current,\r\n      src.name\r\n    )\r\n    imageCallback(croppedImage)\r\n  }\r\n\r\n  return (\r\n    <div className=\"position-fixed \" style={{zIndex:9999 ,top:\"2rem\" ,left:\"2rem\" ,minWidth:\"24rem\",maxWidth:\"40rem\"}}>\r\n      <Container className=\" text-center bg-white shadow rounded-2 mx-auto p-2 m-0\">\r\n          <Col xs={12} className=\"text-center  \">\r\n            <Cropper\r\n              src={src ? URL.createObjectURL(src) : ''}\r\n              className=\"image-fulid\"\r\n              style={{ height: '500px'}}\r\n              aspectRatio={216 / 384}\r\n              guides={false}\r\n              crop={onCrop}\r\n              ref={cropperRef}\r\n              zoomable={true}\r\n              movable={false}\r\n              minCropBoxWidth={200}\r\n              minCropBoxHeight={250}\r\n            />\r\n            <div className=\"text-center\">\r\n            </div>\r\n            <div className=\"px-auto py-2 text-center\">\r\n            <Button\r\n              type=\"button\"\r\n              className=\"btn-danger us-btn-danger mx-1\"\r\n              style={{ width: 'fit-content' }}\r\n              onClick={closeHander}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              className=\"us-btn mx-1\"\r\n              style={{ width: 'fit-content' }}\r\n              onClick={clickHndler}\r\n            >\r\n              Crop\r\n            </Button>\r\n            </div>\r\n          </Col>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CropImage","import React, { useState, useEffect } from 'react'\r\nimport \"./AddStory.css\"\r\nimport AddCircleOutlineRoundedIcon from '@mui/icons-material/AddCircleOutlineRounded';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useAlert } from 'react-alert';\r\nimport { createNewStory } from \"../../../../Actions/Story\"\r\nimport { loadUser } from '../../../../Actions/User';\r\nimport CropImage from '../../StoryCropper/CropImage';\r\nfunction AddStory() {\r\n\r\n  const [image, setImage] = useState(null);\r\n  const dispatch = useDispatch()\r\n  const alert = useAlert()\r\n  const { error, message } = useSelector((state) => state.like)\r\n  const [showCropper, setShowCropper] = useState(false);\r\n  const [cropImage, setCropImage] = useState(false);\r\n  const { user } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (image !== null) {\r\n      dispatch(createNewStory(image))\r\n      dispatch(loadUser());\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch({ type: \"clearErrors\" })\r\n    }\r\n    if (message) {\r\n      alert.success(message);\r\n      dispatch({ type: \"clearErrors\" })\r\n    }\r\n  }, [dispatch, error, message, image, alert])\r\n\r\n  return (\r\n    <div className=' add-story-box  p-0 '>\r\n\r\n      <form >\r\n        <input type=\"file\" accept='image/*' className=\"crop_image d-none\" name=\"crop_image\" id=\"upload_image\" onChange={(e) => {\r\n          setCropImage(e.target.files[0]);\r\n          setShowCropper(true);\r\n        }} />\r\n        <div style={{ backgroundImage: `url(${user.avatar.url})` }} className='add-story-img m-0 p-0 sh col-12 mb-auto' >\r\n        </div>\r\n        <div className=' p-3 d-flex justify-content-center plus-Button-add-story' >\r\n\r\n          <label htmlFor=\"upload_image\" ><span className=\"profilepic__icon\"><AddCircleOutlineRoundedIcon\r\n            sx={{ fontSize: 50 }}\r\n            className='bg-white rounded-circle p-2' /></span></label>\r\n          {showCropper && (\r\n            <div className='d-flex justify-content-center'>\r\n              <CropImage\r\n                src={cropImage}\r\n                imageCallback={(image) => {\r\n                  setImage(image);\r\n                  setShowCropper(false);\r\n                }}\r\n                closeHander={() => {\r\n                  setShowCropper(false);\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddStory","import axios from \"axios\";\r\n\r\nexport const createNewStory = ( image) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"newStoryRequest\",\r\n        });\r\n        const { data } = await axios.post(`/api/v1/story/upload`,{\r\n            image\r\n        },{\r\n            headers: {\r\n                \"Content-type\" : \"application/json\",\r\n            }\r\n        }\r\n            )\r\n            console.log(data)\r\n        dispatch({\r\n            type: \"newStorySuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    \r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({\r\n            type: \"newStoryFailure \",\r\n            \r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./FollowersStories.css\"\r\nimport { Avatar } from \"@nextui-org/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Dialog, Typography } from \"@mui/material\";\r\nimport { getAllUsers, getFollowingStories } from '../../../../Actions/User';\r\nimport emptyStory from \"../../../../Images/emptyStory.gif\"\r\nimport { Skeleton } from \"@mui/material\";\r\nfunction FollowersStories() {\r\n\r\n    const dispatch = useDispatch()\r\n    const { stories, loading } = useSelector(\r\n        (state) => state.storyOfFollowing\r\n    );\r\n    const [storyToggle, setStoryToggle] = useState(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(getFollowingStories());\r\n        dispatch(getAllUsers())\r\n    }, [dispatch]);\r\n\r\n    const [singleStory, setSingleStory] = useState({});\r\n\r\n    const showSingleImage = (index) => {\r\n        const temp = stories[index];\r\n        setSingleStory(temp);\r\n        setStoryToggle(!storyToggle)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading &&\r\n                [...Array(5)].map(() => {\r\n                    return (\r\n                        <div className=\"story-list \">\r\n                            <Skeleton\r\n                                variant=\"rectangular\"\r\n                                sx={{ bgcolor: \"#FFFFFF\" }}\r\n                                className=\"followers-all-stories\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                stories && stories.length > 0 ? (\r\n                    stories.map((story, index) => (\r\n                        <div key={story._id} className=\"story-list \">\r\n                            <div onClick={() => showSingleImage(index)}\r\n                                style={{ backgroundImage: `url(${story.image.url})` }}\r\n                                className=\"followers-all-stories\"\r\n                            >\r\n                                <div className=\"avatar-img\">\r\n                                    <Avatar\r\n                                        size=\"lg\"\r\n                                        className=\"story-follower-avatar\"\r\n                                        src={story.owner.avatar.url}\r\n                                        color=\"gradient\"\r\n                                        bordered\r\n                                    />\r\n                                </div>\r\n                                <h4 className=\"story-follower-name\">{story.owner.name}</h4>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <>\r\n                        <div className=\"story-list \">\r\n                            <div\r\n                                style={{ backgroundImage: `url(${emptyStory})` }}\r\n                                className=\"followers-all-stories\"\r\n                            >\r\n                                <h4 className=\"no-story-text\" >No stories yet</h4>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    // <Typography variant='h6'>No stories yet</Typography>\r\n                )\r\n            }\r\n            <Dialog open={storyToggle} onClose={() => setStoryToggle(!storyToggle)}>\r\n                <div className=\"DialogBoxStory\">\r\n                    {\r\n                        Object.keys(singleStory).length > 0 ?\r\n                            (<>\r\n                                <div\r\n                                    style={{ backgroundImage: `url(${singleStory.image.url})` }}\r\n                                    className=\"single-story-img \"\r\n                                >\r\n                                    <div className=\"avatar-img\">\r\n                                        <Avatar\r\n                                            size=\"lg\"\r\n                                            className=\"story-follower-avatar\"\r\n                                            src={singleStory.owner.avatar.url}\r\n                                            color=\"gradient\"\r\n                                            bordered\r\n                                        />\r\n\r\n                                    </div>\r\n                                    <h4 className=\"single-story-follower-name\">{singleStory.owner.name}</h4>\r\n                                </div>\r\n                            </>)\r\n                            :\r\n                            ''\r\n                    }\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FollowersStories","import React, { useEffect } from 'react'\r\nimport \"./Story.css\"\r\nimport AddStory from './StoryComponents/AddStory';\r\nimport FollowersStories from './StoryComponents/FollowersStories';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useAlert } from 'react-alert';\r\n\r\nfunction Story() {\r\n  const dispatch = useDispatch()\r\n  const { error, message } = useSelector((state) => state.addStory)\r\n  const alert = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch({ type: \"clearErrors\" })\r\n    }\r\n    if (message) {\r\n      alert.success(message);\r\n      dispatch({ type: \"clearErrors\" })\r\n    }\r\n  }, [dispatch, error, message, alert])\r\n\r\n  return (\r\n    <div className=\"row mb-2 all-stories-in-the-home-page mx-1\" style={{ overflowX: \"scroll\" }}>\r\n      {/* <div className=\"col-4 col-sm-3 add-story-home p-0\">\r\n        <AddStory />\r\n      </div>\r\n      <div className=\"col-8 col-sm-9 stories-in-home d-flex ps-3\">\r\n        <FollowersStories />\r\n      </div> */}\r\n      <div className=\"col-12 add-story-home stories-in-home p-0 d-flex\">\r\n        <AddStory />\r\n        <FollowersStories />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Story","import NewPost from '../../../NewPost/NewPost'\r\nimport Post from '../../../Post/Post'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getAllUsers, getFollowingPosts } from '../../../../../Actions/User'\r\nimport Story from '../../../Story/Story'\r\nimport nopostyet from \"../../../../../Images/nopostyet.jpg\"\r\nimport \"./CenterComponent.css\"\r\nimport { Skeleton } from \"@mui/material\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nfunction CenterComponent({width}) {\r\n\r\n  const dispatch = useDispatch();\r\n  const { posts,loading } = useSelector(\r\n    (state) => state.postOfFollowing\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getFollowingPosts())\r\n    dispatch(getAllUsers())\r\n  }, [dispatch])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Story />\r\n      <NewPost />\r\n      {/* {loading && \r\n      [...Array(5)].map(()=>{\r\n\r\n        return (\r\n          <div className='pointer'>\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            sx={{ bgcolor: \"#FFFFFF\" }}\r\n            width={width}\r\n            height={\"198px\"}\r\n          />\r\n          <div className='latest-title' style={{width}}>\r\n            <Skeleton height={\"35px\"}/>\r\n            <Skeleton width={\"80%\"} height={\"35px\"}/>\r\n          </div>\r\n          <div className='latest-cat mt-2 mb-4'><Skeleton width={\"50%\"}/></div>\r\n          \r\n          <div className='latest-line'></div>\r\n        </div>\r\n        )\r\n\r\n      })\r\n      } */}\r\n      {\r\n        posts && posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <Post\r\n              key={post._id}\r\n              host={post.host}\r\n              buddy={post.buddy}\r\n              postId={post._id}\r\n              caption={post.caption}\r\n              postImage={post.image.url}\r\n              tripDate={post.tripDate}\r\n              createdAt={post.createdAt}\r\n              likes={post.likes}\r\n              comments={post.comments}\r\n              ownerImage={post.owner.avatar.url}\r\n              ownerName={post.owner.name}\r\n              ownerId={post.owner._id}\r\n              width={'100%'}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div className='col-12'>\r\n          <img src={nopostyet} alt=\"\" className=\"no-post-yet\" />\r\n          </div>\r\n          \r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CenterComponent","import React, { useEffect, useState } from 'react'\r\nimport { Avatar } from '@mui/material'\r\nimport { useSelector } from \"react-redux\"\r\nimport coverimg from \"../../../../../Images/coverimg.png\"\r\nimport widget from \"../../../../../Images/widget.gif\"\r\nimport wave from \"../../../../../Images/wave.gif\"\r\nimport \"./UserCard.css\"\r\n\r\nfunction UserCard() {\r\n  const { user } = useSelector((state) => state.user);\r\n  const [date, setDate] = useState('')\r\n\r\n  function getDate() {\r\n    let date = new Date()\r\n    let hours = date.getHours()\r\n    if (hours > 0 && hours < 12) {\r\n      setDate('Good Morning')\r\n    }\r\n    else if (hours >= 12 && hours < 16) {\r\n      setDate('Good Afternoon')\r\n    } else if (hours >= 16 && hours < 21) {\r\n      setDate('Good Evening')\r\n    }\r\n    else if (hours >= 21 && hours < 24) {\r\n      setDate('Good Night')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDate()\r\n  }, [])\r\n\r\n  return (\r\n    <div className='user-card-for-side '>\r\n      <div className='user-card'>\r\n        <div className='user-card-top'>\r\n          <img src={user.coverImage ? user.coverImage.url : coverimg} alt=\"cover\" />\r\n          <Avatar src={user.avatar.url} className='user-card-avatar' />\r\n          <h2 style={{ textTransform: \"capitalize\" }}>{user.name}</h2>\r\n          <h4 style={{ textTransform: \"capitalize\" }}>{user.bio}</h4>\r\n        </div>\r\n      </div>\r\n      <div className='user-followers-list d-none d-md-block'>\r\n        <img src={widget} className=\"pt-3 widget-card\" alt=\"widget\" />\r\n        <h3 className=\"pt-3\">Hi <span style={{ textTransform: \"capitalize\" }}>{user.name},</span></h3>\r\n        <h4>{date}!</h4>\r\n        <img src={wave} className=\"pt-3  wave-card\" alt=\"wave\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserCard","import React from 'react'\r\nimport UsersList from './HomeComponents/RightSideComponents/UsersList'\r\nimport CenterComponent from './HomeComponents/CenterComponents/CenterComponent'\r\nimport UserCard from './HomeComponents/LeftSideComponents/UserCard'\r\nimport \"./Home.css\"\r\nimport Header from \"../Header/CommonHeader\"\r\n\r\nfunction Home() {\r\n  return (\r\n<>\r\n<Header />\r\n    <div className=\" w-100 home-page fullBodyHome\" >\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-lg-3 home-left\">\r\n            <UserCard />\r\n          </div>\r\n          <div className=\"col-md-8 col-lg-6 home-center\">\r\n            <CenterComponent />\r\n          </div>\r\n          <div className=\"col-lg-3 home-right d-none d-lg-block\">\r\n            <UsersList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home","import React, { useState } from 'react'\r\nimport \"./NewPost.css\"\r\nimport { Button, Dialog, Typography } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { createNewPost } from '../../../Actions/Post';\r\nimport { loadUser } from \"../../../Actions/User\"\r\nimport PostAddIcon from '@mui/icons-material/PostAdd';\r\n\r\nfunction NewPost() {\r\n\r\n  const [image, setImage] = useState(null);\r\n  const [caption, setCaption] = useState(\"\")\r\n  const [tripDate, setTripDate] = useState(\"\")\r\n  const dispatch = useDispatch()\r\n  const [newPostToggle, setNewPostToggle] = useState(false)\r\n  const { loading } = useSelector((state) => state.like)\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const Reader = new FileReader();\r\n    Reader.readAsDataURL(file);\r\n    Reader.onload = () => {\r\n      if (Reader.readyState === 2) {\r\n        setImage(Reader.result)\r\n      }\r\n    }\r\n  }\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    await dispatch(createNewPost(caption, image, tripDate))\r\n    dispatch(loadUser());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"add-a-new-post\">\r\n        <Button className=\"add-new-post-button\" style={{ color: \"rgba(0, 0, 0, 0.767)\" }} onClick={() => setNewPostToggle(!newPostToggle)}>\r\n          Add post <PostAddIcon />\r\n        </Button>\r\n      </div>\r\n      <Dialog open={newPostToggle} onClose={() => setNewPostToggle(!newPostToggle)}>\r\n        <div className=\"newPost\">\r\n          <form className=\"newPostForm\" onSubmit={submitHandler}>\r\n            <Typography varient=\"h3\">New Post</Typography>\r\n            {image && <img src={image} alt=\"postImage\" />}\r\n            <input type=\"file\" accept=\"image/*\"\r\n              onChange={handleImageChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder='Caption...'\r\n              value={caption}\r\n              onChange={(e) => setCaption(e.target.value)}\r\n            />\r\n            <input type=\"date\" value={tripDate} onChange={(e) => setTripDate(e.target.value)} />\r\n            <Button disabled={loading} type=\"submit\">Post</Button>\r\n          </form>\r\n        </div>\r\n      </Dialog>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPost"],"names":["others","useSelector","state","allUsers","users","loading","user","undefined","filter","usr","followers","includes","_id","className","Array","map","Skeleton","variant","width","length","sort","Math","random","slice","User","userId","name","avatar","url","Typography","getCroppedImg","image","crop","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","height","ctx","getContext","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","toDataURL","src","imageCallback","closeHander","cropperRef","useRef","cropDetailsRef","clickHndler","current","croppedImage","style","zIndex","top","left","minWidth","maxWidth","Container","Col","xs","URL","createObjectURL","aspectRatio","guides","e","detail","ref","zoomable","movable","minCropBoxWidth","minCropBoxHeight","Button","type","onClick","useState","setImage","dispatch","useDispatch","alert","useAlert","like","error","message","showCropper","setShowCropper","cropImage","setCropImage","useEffect","axios","headers","data","console","log","payload","response","createNewStory","loadUser","success","accept","id","onChange","target","files","backgroundImage","htmlFor","AddCircleOutlineRounded","sx","fontSize","storyOfFollowing","stories","storyToggle","setStoryToggle","getFollowingStories","getAllUsers","singleStory","setSingleStory","bgcolor","story","index","temp","showSingleImage","size","owner","color","bordered","emptyStory","Dialog","open","onClose","Object","keys","addStory","overflowX","postOfFollowing","posts","getFollowingPosts","NewPost","post","Post","host","buddy","postId","caption","postImage","tripDate","createdAt","likes","comments","ownerImage","ownerName","ownerId","nopostyet","alt","date","setDate","hours","Date","getHours","getDate","coverImage","coverimg","Avatar","textTransform","bio","widget","wave","setCaption","setTripDate","newPostToggle","setNewPostToggle","submitHandler","preventDefault","createNewPost","PostAdd","onSubmit","varient","file","Reader","FileReader","readAsDataURL","onload","readyState","result","placeholder","value","disabled"],"sourceRoot":""}