{"version":3,"file":"static/js/96.d263466b.chunk.js","mappings":"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","sources":["Actions/Post.js","Components/user/NewPost/NewPost.jsx","../node_modules/@mui/icons-material/PostAdd.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"likeRequest\",\r\n        });\r\n        const { data } = await axios.get(`/api/v1/post/${id}`);\r\n        dispatch({\r\n            type: \"likeSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"likeFailure\",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const addCommentOnPost = (id, comment) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"addCommentRequest\",\r\n        });\r\n        const { data } = await axios.put(`/api/v1/post/comment/${id}`,\r\n            {\r\n                comment,\r\n            },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n        dispatch({\r\n            type: \"addCommentSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"addCommentFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deleteCommentOnPost = (id, commentId) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"deleteCommentRequest\",\r\n        });\r\n        const { data } = await axios.delete(`/api/v1/post/comment/${id}`, {\r\n            data: { commentId },\r\n        }\r\n        )\r\n        dispatch({\r\n            type: \"deleteCommentSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"deleteCommentFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const createNewPost = (caption, image, tripDate) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"newPostRequest\",\r\n        });\r\n        const { data } = await axios.post(`/api/v1/post/upload`, {\r\n            caption,\r\n            image,\r\n            tripDate,\r\n        }, {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            }\r\n        }\r\n        )\r\n        dispatch({\r\n            type: \"newPostSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"newPostFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const updatePost = (caption, id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"updateCaptionRequest\",\r\n        });\r\n        const { data } = await axios.put(`/api/v1/post/${id}`, {\r\n            caption,\r\n        }, {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            }\r\n        }\r\n        )\r\n        dispatch({\r\n            type: \"updateCaptionSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"updateCaptionFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"deletePostRequest\",\r\n        });\r\n        const { data } = await axios.delete(`/api/v1/post/${id}`)\r\n        dispatch({\r\n            type: \"deletePostSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"deletePostFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const postHostRequest = ({ id, name, place, number, description, service }) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"hostRequest\"\r\n        })\r\n\r\n        const { data } = await axios.post(\r\n            `/api/v1/host/request/${id}`,\r\n            { name, place, number, description, service },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n        dispatch({\r\n            type: \"hostSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"hostFailure\",\r\n            payload: error.response.data.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const postBuddyRequest = ({ id, name, place, number, description }) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"buddyRequest\"\r\n        })\r\n\r\n        const { data } = await axios.post(\r\n            `/api/v1/buddy/request/${id}`,\r\n            { name, place, number, description },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n        dispatch({\r\n            type: \"buddySuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"buddyFailure\",\r\n            payload: error.response.data.message,\r\n        })\r\n    }\r\n};","import React, { useState } from 'react'\r\nimport \"./NewPost.css\"\r\nimport { Button, Dialog, Typography } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { createNewPost } from '../../../Actions/Post';\r\nimport { loadUser } from \"../../../Actions/User\"\r\nimport PostAddIcon from '@mui/icons-material/PostAdd';\r\n\r\nfunction NewPost() {\r\n\r\n  const [image, setImage] = useState(null);\r\n  const [caption, setCaption] = useState(\"\")\r\n  const [tripDate, setTripDate] = useState(\"\")\r\n  const dispatch = useDispatch()\r\n  const [newPostToggle, setNewPostToggle] = useState(false)\r\n  const { loading } = useSelector((state) => state.like)\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const Reader = new FileReader();\r\n    Reader.readAsDataURL(file);\r\n    Reader.onload = () => {\r\n      if (Reader.readyState === 2) {\r\n        setImage(Reader.result)\r\n      }\r\n    }\r\n  }\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    await dispatch(createNewPost(caption, image, tripDate))\r\n    dispatch(loadUser());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"add-a-new-post\">\r\n        <Button className=\"add-new-post-button\" style={{ color: \"rgba(0, 0, 0, 0.767)\" }} onClick={() => setNewPostToggle(!newPostToggle)}>\r\n          Add post <PostAddIcon />\r\n        </Button>\r\n      </div>\r\n      <Dialog open={newPostToggle} onClose={() => setNewPostToggle(!newPostToggle)}>\r\n        <div className=\"newPost\">\r\n          <form className=\"newPostForm\" onSubmit={submitHandler}>\r\n            <Typography varient=\"h3\">New Post</Typography>\r\n            {image && <img src={image} alt=\"postImage\" />}\r\n            <input type=\"file\" accept=\"image/*\"\r\n              onChange={handleImageChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder='Caption...'\r\n              value={caption}\r\n              onChange={(e) => setCaption(e.target.value)}\r\n            />\r\n            <input type=\"date\" value={tripDate} onChange={(e) => setTripDate(e.target.value)} />\r\n            <Button disabled={loading} type=\"submit\">Post</Button>\r\n          </form>\r\n        </div>\r\n      </Dialog>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPost","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 19.22H5V7h7V5H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-7h-2v7.22z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 2h-2v3h-3c.01.01 0 2 0 2h3v2.99c.01.01 2 0 2 0V7h3V5h-3V2zM7 9h8v2H7zm0 3v2h8v-2h-3zm0 3h8v2H7z\"\n}, \"1\")], 'PostAdd');\n\nexports.default = _default;"],"names":["likePost","id","dispatch","type","axios","data","payload","message","response","addCommentOnPost","comment","headers","deleteCommentOnPost","commentId","createNewPost","caption","image","tripDate","updatePost","deletePost","postHostRequest","name","place","number","description","service","postBuddyRequest","useState","setImage","setCaption","setTripDate","useDispatch","newPostToggle","setNewPostToggle","loading","useSelector","state","like","submitHandler","e","preventDefault","loadUser","className","Button","style","color","onClick","PostAdd","Dialog","open","onClose","onSubmit","Typography","varient","src","alt","accept","onChange","file","target","files","Reader","FileReader","readAsDataURL","onload","readyState","result","placeholder","value","disabled","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}