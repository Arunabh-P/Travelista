{"version":3,"file":"static/js/121.54361fe4.chunk.js","mappings":"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","sources":["Actions/Post.js","Components/user/CommentCard/CommentCard.jsx","Components/user/Home/HomeComponents/RightSideComponents/UsersList.jsx","Components/user/StoryCropper/getCroppedImg.js","Components/user/StoryCropper/CropImage.js","Components/user/Story/StoryComponents/AddStory.jsx","Actions/Story.js","Components/user/Story/StoryComponents/FollowersStories.jsx","Components/user/Story/Story.jsx","Components/user/Home/HomeComponents/CenterComponents/CenterComponent.jsx","Components/user/Home/HomeComponents/LeftSideComponents/UserCard.jsx","Components/user/Home/Home.jsx","Components/user/NewPost/NewPost.jsx","Components/user/Post/Post.jsx","Components/user/User/User.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"likeRequest\",\r\n        });\r\n        const { data } = await axios.get(`/api/v1/post/${id}`);\r\n        dispatch({\r\n            type: \"likeSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"likeFailure\",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const addCommentOnPost = (id, comment) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"addCommentRequest\",\r\n        });\r\n        const { data } = await axios.put(`/api/v1/post/comment/${id}`,\r\n            {\r\n                comment,\r\n            },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n        dispatch({\r\n            type: \"addCommentSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"addCommentFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deleteCommentOnPost = (id, commentId) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"deleteCommentRequest\",\r\n        });\r\n        const { data } = await axios.delete(`/api/v1/post/comment/${id}`, {\r\n            data: { commentId },\r\n        }\r\n        )\r\n        dispatch({\r\n            type: \"deleteCommentSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"deleteCommentFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const createNewPost = (caption, image, tripDate) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"newPostRequest\",\r\n        });\r\n        const { data } = await axios.post(`/api/v1/post/upload`, {\r\n            caption,\r\n            image,\r\n            tripDate,\r\n        }, {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            }\r\n        }\r\n        )\r\n        dispatch({\r\n            type: \"newPostSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"newPostFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const updatePost = (caption, id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"updateCaptionRequest\",\r\n        });\r\n        const { data } = await axios.put(`/api/v1/post/${id}`, {\r\n            caption,\r\n        }, {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            }\r\n        }\r\n        )\r\n        dispatch({\r\n            type: \"updateCaptionSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"updateCaptionFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"deletePostRequest\",\r\n        });\r\n        const { data } = await axios.delete(`/api/v1/post/${id}`)\r\n        dispatch({\r\n            type: \"deletePostSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"deletePostFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const postHostRequest = ({ id, name, place, number, description, service }) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"hostRequest\"\r\n        })\r\n\r\n        const { data } = await axios.post(\r\n            `/api/v1/host/request/${id}`,\r\n            { name, place, number, description, service },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n        dispatch({\r\n            type: \"hostSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"hostFailure\",\r\n            payload: error.response.data.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const postBuddyRequest = ({ id, name, place, number, description }) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"buddyRequest\"\r\n        })\r\n\r\n        const { data } = await axios.post(\r\n            `/api/v1/buddy/request/${id}`,\r\n            { name, place, number, description },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n        dispatch({\r\n            type: \"buddySuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"buddyFailure\",\r\n            payload: error.response.data.message,\r\n        })\r\n    }\r\n};","import { Button, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./CommentCard.css\";\r\nimport { Delete } from \"@mui/icons-material\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteCommentOnPost } from '../../../Actions/Post';\r\nimport { getFollowingPosts, getMyPosts } from '../../../Actions/User';\r\n\r\n\r\nfunction CommentCard({\r\n  userId,\r\n  name,\r\n  avatar,\r\n  comment,\r\n  commentId,\r\n  postId,\r\n  isAccount,\r\n}) {\r\n\r\n  const { user } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteCommentHandle = () => {\r\n    dispatch(deleteCommentOnPost(postId, commentId));\r\n    if (isAccount) {\r\n      dispatch(getMyPosts());\r\n    } else {\r\n      dispatch(getFollowingPosts());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"commentUser\">\r\n      <Link to={`/user/${userId}`}>\r\n        <img src={avatar} alt={name} />\r\n        <Typography style={{ minWidth: \"6vmax\" }}>{name}</Typography>\r\n      </Link>\r\n      <Typography className=\"comment-tab\">\r\n        {comment}\r\n      </Typography>\r\n      {isAccount ? (\r\n        <Button onClick={deleteCommentHandle} >\r\n          <Delete />\r\n        </Button>\r\n      ) : userId === user._id ? (\r\n        <Button style={{ color: \"black\" }} onClick={deleteCommentHandle} >\r\n          <Delete />\r\n        </Button>\r\n      ) : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentCard","import React from 'react'\r\nimport { Typography } from \"@mui/material\"\r\nimport \"./UsersList.css\"\r\nimport User from '../../../User/User'\r\nimport { useSelector } from \"react-redux\"\r\nimport { Skeleton } from \"@mui/material\";\r\n\r\nfunction UsersList() {\r\n\r\n  const { users, loading } = useSelector(\r\n    (state) => state.allUsers\r\n  )\r\n  const { user } = useSelector(\r\n    (state) => state.user\r\n  )\r\n\r\n  let others\r\n  if (users !== undefined) {\r\n    others = users.filter((usr) => {\r\n      if (!usr.followers.includes(user._id) && usr._id !== user._id) {\r\n        return usr\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className='users-list-to-show'>\r\n      <h4>Connect with travelista family</h4>\r\n      {loading &&\r\n        [...Array(12)].map(() => {\r\n\r\n          return (\r\n            <div className=\"row d-flex \">\r\n              <div className=\"col-8\">\r\n                <div className=\"users-home-list\">\r\n                  <Skeleton variant=\"circular\" className=\"user-home-list-avatar\" />\r\n                  <Skeleton variant=\"text\" width={280} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          )\r\n        })}\r\n      {others && others.length > 0 ? (\r\n\r\n        others\r\n          .sort(() => Math.random() - 0.5)\r\n          .slice(0, 7)\r\n          .map((user) => (\r\n            <User\r\n              key={user._id}\r\n              userId={user._id}\r\n              name={user.name}\r\n              avatar={user.avatar.url}\r\n            />\r\n          ))\r\n      ) : (<Typography variant='h6' >No Users yet</Typography>\r\n      )}\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default UsersList","export function getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas')\r\n    const scaleX = image.naturalWidth / image.width\r\n    const scaleY = image.naturalHeight / image.height\r\n    canvas.width = crop.width\r\n    canvas.height = crop.height\r\n    const ctx = canvas.getContext('2d')\r\n    const pixelRatio = window.devicePixelRatio\r\n    canvas.width = crop.width * pixelRatio\r\n    canvas.height = crop.height * pixelRatio\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0)\r\n    ctx.imageSmoothingQuality = 'high'\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    )\r\n    const base64Image = canvas.toDataURL(\"image/jpeg\");\r\n    return base64Image;\r\n  }","import React, { useRef } from 'react'\r\nimport { Button, Col, Container } from 'react-bootstrap'\r\nimport Cropper from 'react-cropper'\r\nimport 'cropperjs/dist/cropper.css'\r\nimport { getCroppedImg } from './getCroppedImg'\r\n\r\nconst CropImage = ({ src, imageCallback, closeHander }) => {\r\n  const cropperRef = useRef(null)\r\n  const cropDetailsRef = useRef(null)\r\n  const onCrop = (e) => (cropDetailsRef.current = e.detail)\r\n  const clickHndler = async () => {\r\n    const croppedImage = await getCroppedImg(\r\n      cropperRef.current,\r\n      cropDetailsRef.current,\r\n      src.name\r\n    )\r\n    imageCallback(croppedImage)\r\n  }\r\n\r\n  return (\r\n    <div className=\"position-fixed \" style={{zIndex:9999 ,top:\"2rem\" ,left:\"2rem\" ,minWidth:\"24rem\",maxWidth:\"40rem\"}}>\r\n      <Container className=\" text-center bg-white shadow rounded-2 mx-auto p-2 m-0\">\r\n          <Col xs={12} className=\"text-center  \">\r\n            <Cropper\r\n              src={src ? URL.createObjectURL(src) : ''}\r\n              className=\"image-fulid\"\r\n              style={{ height: '500px'}}\r\n              aspectRatio={216 / 384}\r\n              guides={false}\r\n              crop={onCrop}\r\n              ref={cropperRef}\r\n              zoomable={true}\r\n              movable={false}\r\n              minCropBoxWidth={200}\r\n              minCropBoxHeight={250}\r\n            />\r\n            <div className=\"text-center\">\r\n            </div>\r\n            <div className=\"px-auto py-2 text-center\">\r\n            <Button\r\n              type=\"button\"\r\n              className=\"btn-danger us-btn-danger mx-1\"\r\n              style={{ width: 'fit-content' }}\r\n              onClick={closeHander}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              className=\"us-btn mx-1\"\r\n              style={{ width: 'fit-content' }}\r\n              onClick={clickHndler}\r\n            >\r\n              Crop\r\n            </Button>\r\n            </div>\r\n          </Col>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CropImage","import React, { useState, useEffect } from 'react'\r\nimport \"./AddStory.css\"\r\nimport AddCircleOutlineRoundedIcon from '@mui/icons-material/AddCircleOutlineRounded';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useAlert } from 'react-alert';\r\nimport { createNewStory } from \"../../../../Actions/Story\"\r\nimport { loadUser } from '../../../../Actions/User';\r\nimport CropImage from '../../StoryCropper/CropImage';\r\nfunction AddStory() {\r\n\r\n  const [image, setImage] = useState(null);\r\n  const dispatch = useDispatch()\r\n  const alert = useAlert()\r\n  const { error, message } = useSelector((state) => state.like)\r\n  const [showCropper, setShowCropper] = useState(false);\r\n  const [cropImage, setCropImage] = useState(false);\r\n  const { user } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (image !== null) {\r\n      dispatch(createNewStory(image))\r\n      dispatch(loadUser());\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch({ type: \"clearErrors\" })\r\n    }\r\n    if (message) {\r\n      alert.success(message);\r\n      dispatch({ type: \"clearErrors\" })\r\n    }\r\n  }, [dispatch, error, message, image, alert])\r\n\r\n  return (\r\n    <div className=' add-story-box  p-0 '>\r\n\r\n      <form >\r\n        <input type=\"file\" accept='image/*' className=\"crop_image d-none\" name=\"crop_image\" id=\"upload_image\" onChange={(e) => {\r\n          setCropImage(e.target.files[0]);\r\n          setShowCropper(true);\r\n        }} />\r\n        <div style={{ backgroundImage: `url(${user.avatar.url})` }} className='add-story-img m-0 p-0 sh col-12 mb-auto' >\r\n        </div>\r\n        <div className=' p-3 d-flex justify-content-center plus-Button-add-story' >\r\n\r\n          <label htmlFor=\"upload_image\" ><span className=\"profilepic__icon\"><AddCircleOutlineRoundedIcon\r\n            sx={{ fontSize: 50 }}\r\n            className='bg-white rounded-circle p-2' /></span></label>\r\n          {showCropper && (\r\n            <div className='d-flex justify-content-center'>\r\n              <CropImage\r\n                src={cropImage}\r\n                imageCallback={(image) => {\r\n                  setImage(image);\r\n                  setShowCropper(false);\r\n                }}\r\n                closeHander={() => {\r\n                  setShowCropper(false);\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddStory","import axios from \"axios\";\r\n\r\nexport const createNewStory = ( image) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"newStoryRequest\",\r\n        });\r\n        const { data } = await axios.post(`/api/v1/story/upload`,{\r\n            image\r\n        },{\r\n            headers: {\r\n                \"Content-type\" : \"application/json\",\r\n            }\r\n        }\r\n            )\r\n            console.log(data)\r\n        dispatch({\r\n            type: \"newStorySuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    \r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({\r\n            type: \"newStoryFailure \",\r\n            \r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./FollowersStories.css\"\r\nimport { Avatar } from \"@nextui-org/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Dialog, Typography } from \"@mui/material\";\r\nimport { getAllUsers, getFollowingStories } from '../../../../Actions/User';\r\nimport emptyStory from \"../../../../Images/emptyStory.gif\"\r\nimport { Skeleton } from \"@mui/material\";\r\nfunction FollowersStories() {\r\n\r\n    const dispatch = useDispatch()\r\n    const { stories, loading } = useSelector(\r\n        (state) => state.storyOfFollowing\r\n    );\r\n    const [storyToggle, setStoryToggle] = useState(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(getFollowingStories());\r\n        dispatch(getAllUsers())\r\n    }, [dispatch]);\r\n\r\n    const [singleStory, setSingleStory] = useState({});\r\n\r\n    const showSingleImage = (index) => {\r\n        const temp = stories[index];\r\n        setSingleStory(temp);\r\n        setStoryToggle(!storyToggle)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading &&\r\n                [...Array(5)].map(() => {\r\n                    return (\r\n                        <div className=\"story-list \">\r\n                            <Skeleton\r\n                                variant=\"rectangular\"\r\n                                sx={{ bgcolor: \"#FFFFFF\" }}\r\n                                className=\"followers-all-stories\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                stories && stories.length > 0 ? (\r\n                    stories.map((story, index) => (\r\n                        <div key={story._id} className=\"story-list \">\r\n                            <div onClick={() => showSingleImage(index)}\r\n                                style={{ backgroundImage: `url(${story.image.url})` }}\r\n                                className=\"followers-all-stories\"\r\n                            >\r\n                                <div className=\"avatar-img\">\r\n                                    <Avatar\r\n                                        size=\"lg\"\r\n                                        className=\"story-follower-avatar\"\r\n                                        src={story.owner.avatar.url}\r\n                                        color=\"gradient\"\r\n                                        bordered\r\n                                    />\r\n                                </div>\r\n                                <h4 className=\"story-follower-name\">{story.owner.name}</h4>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <>\r\n                        <div className=\"story-list \">\r\n                            <div\r\n                                style={{ backgroundImage: `url(${emptyStory})` }}\r\n                                className=\"followers-all-stories\"\r\n                            >\r\n                                <h4 className=\"no-story-text\" >No stories yet</h4>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    // <Typography variant='h6'>No stories yet</Typography>\r\n                )\r\n            }\r\n            <Dialog open={storyToggle} onClose={() => setStoryToggle(!storyToggle)}>\r\n                <div className=\"DialogBoxStory\">\r\n                    {\r\n                        Object.keys(singleStory).length > 0 ?\r\n                            (<>\r\n                                <div\r\n                                    style={{ backgroundImage: `url(${singleStory.image.url})` }}\r\n                                    className=\"single-story-img \"\r\n                                >\r\n                                    <div className=\"avatar-img\">\r\n                                        <Avatar\r\n                                            size=\"lg\"\r\n                                            className=\"story-follower-avatar\"\r\n                                            src={singleStory.owner.avatar.url}\r\n                                            color=\"gradient\"\r\n                                            bordered\r\n                                        />\r\n\r\n                                    </div>\r\n                                    <h4 className=\"single-story-follower-name\">{singleStory.owner.name}</h4>\r\n                                </div>\r\n                            </>)\r\n                            :\r\n                            ''\r\n                    }\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FollowersStories","import React, { useEffect } from 'react'\r\nimport \"./Story.css\"\r\nimport AddStory from './StoryComponents/AddStory';\r\nimport FollowersStories from './StoryComponents/FollowersStories';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useAlert } from 'react-alert';\r\n\r\nfunction Story() {\r\n  const dispatch = useDispatch()\r\n  const { error, message } = useSelector((state) => state.addStory)\r\n  const alert = useAlert();\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch({ type: \"clearErrors\" })\r\n    }\r\n    if (message) {\r\n      alert.success(message);\r\n      dispatch({ type: \"clearErrors\" })\r\n    }\r\n  }, [dispatch, error, message, alert])\r\n\r\n  return (\r\n    <div className=\"row mb-2 all-stories-in-the-home-page mx-1\" style={{ overflowX: \"scroll\" }}>\r\n      {/* <div className=\"col-4 col-sm-3 add-story-home p-0\">\r\n        <AddStory />\r\n      </div>\r\n      <div className=\"col-8 col-sm-9 stories-in-home d-flex ps-3\">\r\n        <FollowersStories />\r\n      </div> */}\r\n      <div className=\"col-12 add-story-home stories-in-home p-0 d-flex\">\r\n        <AddStory />\r\n        <FollowersStories />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Story","import NewPost from '../../../NewPost/NewPost'\r\nimport Post from '../../../Post/Post'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getAllUsers, getFollowingPosts } from '../../../../../Actions/User'\r\nimport Story from '../../../Story/Story'\r\nimport nopostyet from \"../../../../../Images/nopostyet.jpg\"\r\nimport \"./CenterComponent.css\"\r\nimport { Skeleton } from \"@mui/material\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nfunction CenterComponent({width}) {\r\n\r\n  const dispatch = useDispatch();\r\n  const { posts,loading } = useSelector(\r\n    (state) => state.postOfFollowing\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getFollowingPosts())\r\n    dispatch(getAllUsers())\r\n  }, [dispatch])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Story />\r\n      <NewPost />\r\n      {loading && \r\n      [...Array(5)].map(()=>{\r\n\r\n        return (\r\n          <div className='pointer'>\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            sx={{ bgcolor: \"#FFFFFF\" }}\r\n            width={width}\r\n            height={\"198px\"}\r\n          />\r\n          <div className='latest-title' style={{width}}>\r\n            <Skeleton height={\"35px\"}/>\r\n            <Skeleton width={\"80%\"} height={\"35px\"}/>\r\n          </div>\r\n          <div className='latest-cat mt-2 mb-4'><Skeleton width={\"50%\"}/></div>\r\n          \r\n          <div className='latest-line'></div>\r\n        </div>\r\n        )\r\n\r\n      })\r\n      }\r\n      {\r\n        posts && posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <Post\r\n              key={post._id}\r\n              host={post.host}\r\n              buddy={post.buddy}\r\n              postId={post._id}\r\n              caption={post.caption}\r\n              postImage={post.image.url}\r\n              tripDate={post.tripDate}\r\n              createdAt={post.createdAt}\r\n              likes={post.likes}\r\n              comments={post.comments}\r\n              ownerImage={post.owner.avatar.url}\r\n              ownerName={post.owner.name}\r\n              ownerId={post.owner._id}\r\n              width={'100%'}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div className='col-12'>\r\n          <img src={nopostyet} alt=\"\" className=\"no-post-yet\" />\r\n          </div>\r\n          \r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CenterComponent","import React, { useEffect, useState } from 'react'\r\nimport { Avatar } from '@mui/material'\r\nimport { useSelector } from \"react-redux\"\r\nimport coverimg from \"../../../../../Images/coverimg.png\"\r\nimport widget from \"../../../../../Images/widget.gif\"\r\nimport wave from \"../../../../../Images/wave.gif\"\r\nimport \"./UserCard.css\"\r\n\r\nfunction UserCard() {\r\n  const { user } = useSelector((state) => state.user);\r\n  const [date, setDate] = useState('')\r\n\r\n  function getDate() {\r\n    let date = new Date()\r\n    let hours = date.getHours()\r\n    if (hours > 0 && hours < 12) {\r\n      setDate('Good Morning')\r\n    }\r\n    else if (hours >= 12 && hours < 16) {\r\n      setDate('Good Afternoon')\r\n    } else if (hours >= 16 && hours < 21) {\r\n      setDate('Good Evening')\r\n    }\r\n    else if (hours >= 21 && hours < 24) {\r\n      setDate('Good Night')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDate()\r\n  }, [])\r\n\r\n  return (\r\n    <div className='user-card-for-side '>\r\n      <div className='user-card'>\r\n        <div className='user-card-top'>\r\n          <img src={user.coverImage ? user.coverImage.url : coverimg} alt=\"cover\" />\r\n          <Avatar src={user.avatar.url} className='user-card-avatar' />\r\n          <h2 style={{ textTransform: \"capitalize\" }}>{user.name}</h2>\r\n          <h4 style={{ textTransform: \"capitalize\" }}>{user.bio}</h4>\r\n        </div>\r\n      </div>\r\n      <div className='user-followers-list d-none d-md-block'>\r\n        <img src={widget} className=\"pt-3 widget-card\" alt=\"widget\" />\r\n        <h3 className=\"pt-3\">Hi <span style={{ textTransform: \"capitalize\" }}>{user.name},</span></h3>\r\n        <h4>{date}!</h4>\r\n        <img src={wave} className=\"pt-3  wave-card\" alt=\"wave\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserCard","import React from 'react'\r\nimport UsersList from './HomeComponents/RightSideComponents/UsersList'\r\nimport CenterComponent from './HomeComponents/CenterComponents/CenterComponent'\r\nimport UserCard from './HomeComponents/LeftSideComponents/UserCard'\r\nimport \"./Home.css\"\r\n\r\nfunction Home() {\r\n  return (\r\n\r\n    <div className=\" w-100 home-page fullBodyHome\" >\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-lg-3 home-left\">\r\n            <UserCard />\r\n          </div>\r\n          <div className=\"col-md-8 col-lg-6 home-center\">\r\n            <CenterComponent />\r\n          </div>\r\n          <div className=\"col-lg-3 home-right d-none d-lg-block\">\r\n            <UsersList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Home","import React, { useState } from 'react'\r\nimport \"./NewPost.css\"\r\nimport { Button, Dialog, Typography } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { createNewPost } from '../../../Actions/Post';\r\nimport { loadUser } from \"../../../Actions/User\"\r\nimport PostAddIcon from '@mui/icons-material/PostAdd';\r\n\r\nfunction NewPost() {\r\n\r\n  const [image, setImage] = useState(null);\r\n  const [caption, setCaption] = useState(\"\")\r\n  const [tripDate, setTripDate] = useState(\"\")\r\n  const dispatch = useDispatch()\r\n  const [newPostToggle, setNewPostToggle] = useState(false)\r\n  const { loading } = useSelector((state) => state.like)\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const Reader = new FileReader();\r\n    Reader.readAsDataURL(file);\r\n    Reader.onload = () => {\r\n      if (Reader.readyState === 2) {\r\n        setImage(Reader.result)\r\n      }\r\n    }\r\n  }\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    await dispatch(createNewPost(caption, image, tripDate))\r\n    dispatch(loadUser());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"add-a-new-post\">\r\n        <Button className=\"add-new-post-button\" style={{ color: \"rgba(0, 0, 0, 0.767)\" }} onClick={() => setNewPostToggle(!newPostToggle)}>\r\n          Add post <PostAddIcon />\r\n        </Button>\r\n      </div>\r\n      <Dialog open={newPostToggle} onClose={() => setNewPostToggle(!newPostToggle)}>\r\n        <div className=\"newPost\">\r\n          <form className=\"newPostForm\" onSubmit={submitHandler}>\r\n            <Typography varient=\"h3\">New Post</Typography>\r\n            {image && <img src={image} alt=\"postImage\" />}\r\n            <input type=\"file\" accept=\"image/*\"\r\n              onChange={handleImageChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder='Caption...'\r\n              value={caption}\r\n              onChange={(e) => setCaption(e.target.value)}\r\n            />\r\n            <input type=\"date\" value={tripDate} onChange={(e) => setTripDate(e.target.value)} />\r\n            <Button disabled={loading} type=\"submit\">Post</Button>\r\n          </form>\r\n        </div>\r\n      </Dialog>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPost","import { Avatar, Button, Typography, Dialog } from \"@mui/material\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n    MoreVert,\r\n    Favorite,\r\n    FavoriteBorder,\r\n    ChatBubbleOutline,\r\n    DeleteOutline,\r\n    VolunteerActivism\r\n} from \"@mui/icons-material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Post.css\"\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCommentOnPost, deletePost, likePost, updatePost } from \"../../../Actions/Post\"\r\nimport { getFollowingPosts, getMyPosts, loadUser } from \"../../../Actions/User\";\r\nimport User from \"../User/User\";\r\nimport CommentCard from \"../CommentCard/CommentCard\";\r\nimport { format } from \"timeago.js\"\r\nimport { FaRegHandPeace } from \"react-icons/fa\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport FlutterDashOutlinedIcon from '@mui/icons-material/FlutterDashOutlined';\r\n\r\nfunction Post({\r\n    postId,\r\n    caption,\r\n    postImage,\r\n    likes = [],\r\n    comments = [],\r\n    ownerImage,\r\n    tripDate,\r\n    createdAt,\r\n    ownerName,\r\n    ownerId,\r\n    isDelete = false,\r\n    isAccount = false,\r\n    width,\r\n    host = [],\r\n    buddy = [],\r\n}) {\r\n    const [liked, setLiked] = useState(false);\r\n    const [likesUser, setLikesUser] = useState(false);\r\n    const [commentValue, setCommentValue] = useState(\"\");\r\n    const [commentToggle, setCommentToggle] = useState(false);\r\n    const [captionValue, setCaptionValue] = useState(caption);\r\n    const [captionToggle, setCaptionToggle] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector((state) => state.user)\r\n\r\n    const handleLike = async () => {\r\n        setLiked(!liked);\r\n        await dispatch(likePost(postId));\r\n        if (isAccount) {\r\n            dispatch(getMyPosts())\r\n        } else {\r\n            dispatch(getFollowingPosts())\r\n        }\r\n    }\r\n\r\n    const addCommentHandler = async (e) => {\r\n        e.preventDefault();\r\n        await dispatch(addCommentOnPost(postId, commentValue))\r\n        if (isAccount) {\r\n            dispatch(getMyPosts())\r\n        } else {\r\n            dispatch(getFollowingPosts())\r\n        }\r\n    }\r\n\r\n    const updateCaptionHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updatePost(captionValue, postId))\r\n        dispatch(getMyPosts())\r\n    }\r\n\r\n    const deletePostHandler = async () => {\r\n        await dispatch(deletePost(postId));\r\n        dispatch(getMyPosts())\r\n        dispatch(loadUser())\r\n    }\r\n\r\n    useEffect(() => {\r\n        likes.forEach((item) => {\r\n            if (item._id === user._id) {\r\n                setLiked(true);\r\n            }\r\n        });\r\n    }, [likes, user._id]);\r\n\r\n\r\n    return (\r\n        <div className=\"post\" style={{ width: width }}>\r\n            <div className=\"postHeader\">\r\n                {isAccount ? (\r\n                    <Button onClick={() => setCaptionToggle(!captionToggle)}>\r\n                        <MoreVert />\r\n                    </Button>\r\n                ) : null}\r\n            </div>\r\n            <img src={postImage} alt=\"Post\" />\r\n\r\n            <div className=\"postDetails\">\r\n                <Avatar src={ownerImage} alt=\"user\"\r\n                    sz={{\r\n                        height: \"3vmax\",\r\n                        width: \"3vmax\"\r\n                    }}\r\n                />\r\n                <Link to={`/user/${ownerId}`}>\r\n                    <Typography fontWeight={700}>{ownerName}</Typography>\r\n                </Link>\r\n                <Typography\r\n                    fontWeight={100}\r\n                    color=\"rgba(0, 0, 0, 0.582)\"\r\n                    style={{ alignSelf: \"center\" }}\r\n                >\r\n                    {caption} </Typography>\r\n\r\n\r\n                <Typography\r\n                    fontWeight={100}\r\n                    color=\"rgba(0, 0, 0, 0.582)\"\r\n                    style={{ alignSelf: \"center\"}}\r\n                >\r\n                    <span > &#160; {format(createdAt)} </span>\r\n                </Typography>\r\n\r\n            </div>\r\n            {\r\n                tripDate ? <Typography\r\n                    // fontWeight={100}\r\n                    color=\"rgba(0, 0, 0, 0.582)\"\r\n                    style={{ alignSelf: \"center\" }}\r\n                >\r\n                    &#160; <span style={{ fontSize:'.9rem' }} className=\"mt-1 pl-5\">&#160; Trip planned on {tripDate} </span>\r\n                </Typography> : \"\"\r\n            }\r\n            <Button\r\n                style={{\r\n                    border: \"none\",\r\n                    backgroundColor: \"white\",\r\n                    cursor: \"pointer\",\r\n                    marginLeft:'1rem',\r\n                }}\r\n                onClick={() => setLikesUser(!likesUser)}\r\n                disabled={likes.length === 0 ? true : false}\r\n            >\r\n                <Typography>{likes.length} likes</Typography>\r\n            </Button>\r\n            <div className=\"postFooter\">\r\n                <Button onClick={handleLike} className=\"InputOptions\">\r\n                    {liked ? <Favorite /> : <FavoriteBorder />}\r\n                </Button>\r\n                <Button onClick={() => setCommentToggle(!commentToggle)}>\r\n                    <ChatBubbleOutline />\r\n                </Button>\r\n\r\n                    <Button className=\"InputOptions\" >\r\n                <OverlayTrigger overlay={<Tooltip id='tooltip-top'>Give a proposal</Tooltip>}>\r\n                        <Link to={`/proposal/${postId}`} className=\" proposal-button\">\r\n                            <FlutterDashOutlinedIcon />\r\n                        </Link>\r\n                </OverlayTrigger>\r\n                    </Button>\r\n\r\n                {isDelete ? (\r\n                    <Button onClick={deletePostHandler}>\r\n                        <DeleteOutline />\r\n                    </Button>\r\n                ) : null}\r\n\r\n\r\n            </div>\r\n            <Dialog className=\"Dialogbox-scroll\" open={likesUser} onClose={() => setLikesUser(!likesUser)}>\r\n                <div className=\"DialogBoxPost\">\r\n                    {likes.map((like) => (\r\n                        <User\r\n                            key={like._id}\r\n                            userId={like._id}\r\n                            name={like.name}\r\n                            avatar={like.avatar.url}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </Dialog>\r\n            <Dialog className=\"Dialogbox-scroll\"\r\n                open={commentToggle}\r\n                onClose={() => setCommentToggle(!commentToggle)}\r\n            >\r\n                <div className=\"DialogBox2 p-5\">\r\n                    <form className=\" col-12  p-5 mt-2\" onSubmit={addCommentHandler}>\r\n                        <textarea name=\"\" value={commentValue}  \r\n                        onChange={(e) => setCommentValue(e.target.value)}\r\n                        id=\"\" cols=\"20\" rows=\"3\"\r\n                        className=\"w-100 \"\r\n                        />\r\n                        <Button className=\"add-butto col-12 \"type=\"submit\" variant=\"contained\"  >\r\n                            Add Comment\r\n                        </Button>\r\n                    </form>\r\n\r\n\r\n\r\n                    {/* <form className=\"commentForm\" onSubmit={addCommentHandler}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={commentValue}\r\n                            onChange={(e) => setCommentValue(e.target.value)}\r\n                            placeholder=\"Comment Here...\"\r\n                            required\r\n                        />\r\n                        <Button className=\"add-button\" type=\"submit\" variant=\"contained\"  >\r\n                            Add\r\n                        </Button>\r\n                    </form> */}\r\n                    {comments.length > 0 ? (\r\n                        comments.map((item) => (\r\n                            <CommentCard\r\n                                userId={item.user._id}\r\n                                name={item.user.name}\r\n                                avatar={item.user.avatar.url}\r\n                                comment={item.comment}\r\n                                commentId={item._id}\r\n                                key={item._id}\r\n                                postId={postId}\r\n                                isAccount={isAccount}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        <Typography>No comments Yet</Typography>\r\n                    )}\r\n                </div>\r\n            </Dialog>\r\n            <Dialog className=\"Dialogbox-scroll\"\r\n                open={captionToggle}\r\n                onClose={() => setCaptionToggle(!captionToggle)}\r\n            >\r\n                <div className=\"DialogBox\">\r\n                    <Typography variant=\"h4\">Update caption</Typography>\r\n                    <form className=\"commentForm\" onSubmit={updateCaptionHandler}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={captionValue}\r\n                            onChange={(e) => setCaptionValue(e.target.value)}\r\n                            placeholder=\"Caption Here...\"\r\n                            required\r\n                        />\r\n                        <Button className=\"add-button\" type=\"submit\" variant=\"contained\"  >\r\n                            Update\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Typography } from \"@mui/material\"\r\nimport \"./all-users-list.css\"\r\nfunction User({ userId, name, avatar }) {\r\n    return (\r\n        <>\r\n            <div className=\"row d-flex \">\r\n                <div className=\"col-8\">\r\n                    <Link to={`/user/${userId}`} className=\"users-home-list\">\r\n                        <img src={avatar} alt={name} />\r\n                        <Typography>{name}</Typography>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default User"],"names":["likePost","id","dispatch","type","axios","data","payload","message","response","addCommentOnPost","comment","headers","deleteCommentOnPost","commentId","createNewPost","caption","image","tripDate","updatePost","deletePost","postHostRequest","name","place","number","description","service","postBuddyRequest","userId","avatar","postId","isAccount","user","useSelector","state","useDispatch","deleteCommentHandle","getMyPosts","getFollowingPosts","className","to","src","alt","Typography","style","minWidth","Button","onClick","Delete","_id","color","others","allUsers","users","loading","undefined","filter","usr","followers","includes","Array","map","Skeleton","variant","width","length","sort","Math","random","slice","User","url","getCroppedImg","crop","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","height","ctx","getContext","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","toDataURL","imageCallback","closeHander","cropperRef","useRef","cropDetailsRef","clickHndler","current","croppedImage","zIndex","top","left","maxWidth","Container","Col","xs","URL","createObjectURL","aspectRatio","guides","e","detail","ref","zoomable","movable","minCropBoxWidth","minCropBoxHeight","useState","setImage","alert","useAlert","like","error","showCropper","setShowCropper","cropImage","setCropImage","useEffect","console","log","createNewStory","loadUser","success","accept","onChange","target","files","backgroundImage","htmlFor","AddCircleOutlineRounded","sx","fontSize","storyOfFollowing","stories","storyToggle","setStoryToggle","getFollowingStories","getAllUsers","singleStory","setSingleStory","bgcolor","story","index","temp","showSingleImage","size","owner","bordered","emptyStory","Dialog","open","onClose","Object","keys","addStory","overflowX","postOfFollowing","posts","NewPost","post","Post","host","buddy","postImage","createdAt","likes","comments","ownerImage","ownerName","ownerId","nopostyet","date","setDate","hours","Date","getHours","getDate","coverImage","coverimg","Avatar","textTransform","bio","widget","wave","setCaption","setTripDate","newPostToggle","setNewPostToggle","submitHandler","preventDefault","PostAdd","onSubmit","varient","file","Reader","FileReader","readAsDataURL","onload","readyState","result","placeholder","value","disabled","isDelete","liked","setLiked","likesUser","setLikesUser","commentValue","setCommentValue","commentToggle","setCommentToggle","captionValue","setCaptionValue","captionToggle","setCaptionToggle","handleLike","addCommentHandler","deletePostHandler","forEach","item","MoreVert","sz","fontWeight","alignSelf","format","border","backgroundColor","cursor","marginLeft","Favorite","FavoriteBorder","ChatBubbleOutline","OverlayTrigger","overlay","Tooltip","FlutterDashOutlined","DeleteOutline","cols","rows","CommentCard","required"],"sourceRoot":""}