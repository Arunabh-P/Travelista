{"version":3,"file":"static/js/797.cb946b02.chunk.js","mappings":"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","sources":["Components/user/Header/CommonHeader.js","Components/user/ChatOnline/ChatOnline.jsx","Components/user/conversations/Conversation.jsx","Components/user/Message/Message.jsx","Components/user/Messenger/Messenger.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\"\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom'\r\nimport ChatOutlinedIcon from \"@mui/icons-material/ChatOutlined\";\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport HomeOutlinedIcon from \"@mui/icons-material/HomeOutlined\";\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport UserProfile from '@mui/icons-material/AccountCircleOutlined';\r\nimport PersonSearchOutlinedIcon from '@mui/icons-material/PersonSearchOutlined';\r\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\r\nimport { logoutUser } from \"../../../Actions/User\"\r\nimport { useAlert } from \"react-alert\"\r\nimport { NavDropdown } from \"react-bootstrap\"\r\nimport \"./CommonHeader.css\"\r\n\r\n\r\nfunction Header() {\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const [tab, setTab] = useState(window.location.pathname);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logoutUser());\r\n    alert.success(\"Logged out successfully\")\r\n  }\r\n\r\n  return (\r\n\r\n    <Navbar expand=\"lg\" className=\" sticky-top  w-100 bg-white  \">\r\n      <Container >\r\n        <Navbar.Brand style={{ fontSize: \"30px\" }}>\r\n          <Link style={{ textDecoration: \"none\", color: \"black\" }} to={'/'}> Travelista</Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Nav\r\n            className=\"me-auto my-2 my-lg-0\"\r\n            style={{ maxHeight: \"100px\" }}\r\n            navbarScroll\r\n          ></Nav>\r\n          <Nav>\r\n            <div className=\"d-none d-lg-flex\">\r\n              <Link to=\"/\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/\")}>\r\n                {tab === \"/\" ? <HomeIcon /> : <HomeOutlinedIcon />}\r\n              </Link>\r\n              <Link to=\"/search\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/search\")} >\r\n                {tab === \"/search\" ? <PersonSearchIcon /> : <PersonSearchOutlinedIcon />}\r\n              </Link>\r\n              <Link to=\"/messenger\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/messenger\")} >\r\n                {tab === \"/messenger\" ? <ChatIcon /> : <ChatOutlinedIcon />}\r\n              </Link>\r\n              <NavDropdown style={{ color: \"black\", paddingLeft: \"22.5px\", marginTop: \"-8px\" }} title={<UserProfile style={{ color: \"black\" }} />} id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item >\r\n                  <Link to=\"/account\" className=\"account-text-header\" >Account</Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item>\r\n                  <Link to=\"/update/password\" className=\"account-text-header\">Change Password</Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item>\r\n                  <Link to=\"/update/profile\" className=\"account-text-header\">Edit Profile</Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item>\r\n                  <p onClick={(logoutHandler)} style={{ marginBottom: \"0\" }}>\r\n                    <LogoutIcon /> LogOut\r\n                  </p>\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </div>\r\n            <div className=\"d-lg-none d-flex justify-content-start row\">\r\n              <div className=\"home-md-icons row\">\r\n                <div className=\"each-list-icons dropdown-item\" >\r\n                  <Link to=\"/\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} className=\"icon-in-header\" onClick={() => setTab(\"/\")}>\r\n                    {tab === \"/\" ? <HomeIcon /> : <HomeOutlinedIcon />} Home\r\n                  </Link>\r\n                </div>\r\n                <div className=\"each-list-icons dropdown-item\">\r\n                  <Link to=\"/search\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/search\")} className=\"icon-in-header\" >\r\n                    {tab === \"/search\" ? <PersonSearchIcon /> : <PersonSearchOutlinedIcon />} Search\r\n                  </Link>\r\n                </div>\r\n                <div className=\"each-list-icons dropdown-item\">\r\n                  <Link to=\"/messenger\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/messenger\")} className=\"icon-in-header\" >\r\n                    {tab === \"/messenger\" ? <ChatIcon /> : <ChatOutlinedIcon />} Chat\r\n                  </Link>\r\n                </div>\r\n                <div className=\"each-list-icons\">\r\n                  <NavDropdown style={{ color: \"black\", paddingLeft: \"22.5px\", marginTop: \"-8px\" }} title=\"Account\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item >\r\n                      <Link to=\"/account\" className=\"account-text-header\" >Account</Link>\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item>\r\n                      <Link to=\"/update/password\" className=\"account-text-header\">Change Password</Link>\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item>\r\n                      <Link to=\"/update/profile\" className=\"account-text-header\">Edit Profile</Link>\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item>\r\n                      <p onClick={(logoutHandler)} style={{ marginBottom: \"0\" }}>\r\n                        <LogoutIcon /> LogOut\r\n                      </p>\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport \"./ChatOnline.css\"\r\nimport axios from \"axios\"\r\nimport { useSelector } from \"react-redux\"\r\nimport SentimentDissatisfiedIcon from '@mui/icons-material/SentimentDissatisfied';\r\n\r\nfunction ChatOnline({ onlineUsers, currentId, setCurrentChat }) {\r\n\r\n  const { user } = useSelector((state) => state.user);\r\n  const handleClick = async (user) => {\r\n    try {\r\n      const { data } = await axios.get(`/api/v1/conversation/find/${currentId}/${user._id}`)\r\n      setCurrentChat(data)\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chatOnline\">\r\n        <p className=\"text-on-online\">Online Users</p>\r\n        {\r\n          onlineUsers && onlineUsers.length > 0 ? (\r\n            onlineUsers?.map((o) => (\r\n              <div className=\"chatOnlineFriend\" key={o._id} onClick={() => handleClick(o)}>\r\n                <div className=\"chatOnlineImgContainer\">\r\n                  <img\r\n                    className=\"chatOnlineImg\"\r\n                    src={o?.avatar.url}\r\n                    alt=\"online friend avatar\"\r\n                  />\r\n                  <div className=\"chatOnlineBadge\"></div>\r\n                </div>\r\n                <span className=\"chatOnlineName\">{o?.name}</span>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p style={{ color: \"rgb(118, 118, 124)\" }}><SentimentDissatisfiedIcon /> <span className='no-one-online'>Oops.. everyone is having a break time!</span> </p>\r\n          )\r\n        }\r\n      </div>\r\n      <div>\r\n        <div className=\"chatOnline\">\r\n          <p className=\"text-on-online mt-2\">Friends list</p>\r\n          {\r\n            user && user.following.length > 0 ? user.following.map((follow) => ((\r\n              <div className=\"chatOnlineFriend\" onClick={() => handleClick(follow)}>\r\n                <div className=\"chatOnlineImgContainer\">\r\n                  <img\r\n                    className=\"chatOnlineImg\"\r\n                    src={follow.avatar.url}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <span className=\"chatOnlineName\">{follow.name}</span>\r\n              </div>\r\n            ))\r\n            ) : (\r\n              <p style={{ margin: \"2vmax\" }}> You're not following anyone</p>\r\n            )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChatOnline","import React, { useState, useEffect } from 'react'\r\nimport \"./Conversation.css\"\r\nimport axios from 'axios'\r\n\r\nfunction Conversation({ conversation, currentUser }) {\r\n\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const friendId = conversation.members.find(m => m !== currentUser._id)\r\n    const getUser = async () => {\r\n      try {\r\n        const { data } = await axios(`/api/v1/user/${friendId}`)\r\n        setUser(data.user)\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    getUser()\r\n  }, [currentUser, conversation])\r\n\r\n  return (\r\n    <div className=\"conversation\">\r\n      <img className=\"conversationImg\" src={user && user.avatar.url} alt=\"\" />\r\n      <span className=\"conversationName\">{user && user.name}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Conversation","import React from 'react'\r\nimport \"./Message.css\"\r\nimport { format } from \"timeago.js\"\r\n\r\nfunction Message({ message, own }) {\r\n\r\n  return (\r\n    <div className={own ? \"message own\" : \"message\"}>\r\n      <div className=\"messageTop\">\r\n        <img className=\"messageImg\" src={message?.sender.avatar.url} alt=\"\" />\r\n        <p className=\"messageText\">{message.text}</p>\r\n      </div>\r\n      <div className=\"messageBottom\">{format(message.createdAt)}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Message","import React, { useState, useEffect, useRef } from 'react'\r\nimport ChatOnline from '../ChatOnline/ChatOnline'\r\nimport Conversation from '../conversations/Conversation'\r\nimport Message from '../Message/Message'\r\nimport { useSelector } from \"react-redux\"\r\nimport axios from \"axios\"\r\nimport { io } from \"socket.io-client\"\r\nimport \"./Messenger.css\"\r\nimport Header from \"../Header/CommonHeader\"\r\nimport send from \"../../../Images/send.png\"\r\n\r\nfunction Messenger() {\r\n    const [converstions, setConverstions] = useState([])\r\n    const [currentChat, setCurrentChat] = useState(null)\r\n    const [messages, setMessages] = useState([])\r\n    const [newMessage, setNewMessage] = useState(\"\")\r\n    const [arrivalMessage, setArrivalMessage] = useState(null)\r\n    const [onlineUsers, setOnlineUsers] = useState(null)\r\n    const socket = useRef(io(\"https://trvalista.online\"))\r\n    \r\n    \r\n    const scrollRef = useRef()\r\n    const { user } = useSelector((state) => state.user);\r\n    useEffect(() => {\r\n        socket.current = io(\"https://travalista.online\");\r\n        \r\n        socket.current.on(\"getMessage\", (data) => {\r\n            setArrivalMessage({\r\n                sender: data.sender,\r\n                text: data.text,\r\n                createdAt: Date.now()\r\n            });\r\n        });\r\n        return () => {\r\n            socket.current.close()\r\n        }\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        arrivalMessage &&\r\n            currentChat?.members.includes(arrivalMessage.sender._id) &&\r\n            setMessages((prev) => [...prev, arrivalMessage])\r\n    }, [arrivalMessage, currentChat])\r\n\r\n    useEffect(() => {\r\n        socket.current.emit(\"addUser\", user._id)\r\n        socket.current.on(\"getUsers\", (users) => {\r\n            users = JSON.parse(users)\r\n            setOnlineUsers(\r\n                user.following.filter((f) => users.some((u) => u.userId === f._id)))\r\n        })\r\n    }, [user.following, user._id])\r\n\r\n    useEffect(() => {\r\n        const getConversations = async () => {\r\n            try {\r\n                const { data } = await axios.get(`/api/v1/conversation/${user._id}`)\r\n                setConverstions(data)\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        getConversations()\r\n    }, [user._id])\r\n\r\n    useEffect(() => {\r\n        const getMessages = async () => {\r\n            try {\r\n                const { data } = await axios.get(`/api/v1/message/${currentChat?._id}`)\r\n                setMessages(data)\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        getMessages()\r\n    }, [currentChat])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            sender: user,\r\n            text: newMessage,\r\n            conversationId: currentChat._id\r\n        }\r\n\r\n        const receiverId = currentChat.members.find((member) => member !== user._id);\r\n        socket.current.emit(\"sendMessage\", {\r\n            senderId: {\r\n                avatar: user.avatar,\r\n                _id: user._id\r\n            },\r\n            receiverId,\r\n            text: newMessage\r\n        })\r\n\r\n        try {\r\n            const { data } = await axios.post(`/api/v1/message`, message)\r\n            setMessages([...messages, data])\r\n            setNewMessage(\"\")\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }, [messages])\r\n\r\n\r\n    return (\r\n        <>\r\n        <Header />\r\n        <div className=\"body-messager pt-2 \">\r\n            <div className='messenger  container'>\r\n                <div className=\"chatMenu d-none d-sm-block col-2\">\r\n                    <div className=\"chatMenuWrapper\">\r\n                        <h5>Recent Chats</h5>\r\n                        {converstions.map((c) => (\r\n                            <div key={c._id} onClick={() => setCurrentChat(c)}>\r\n                                <Conversation conversation={c} currentUser={user} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"chatBox col-sm-8\">\r\n                    <div className=\"chatBoxWrapper\">\r\n                        {currentChat ?\r\n                            <>\r\n                                <div className=\"chatBoxTop\">\r\n                                    {messages.map(m => (\r\n                                        <div key={m._id} ref={scrollRef}>\r\n                                            < Message message={m} own={m.sender._id === user._id} />\r\n                                        </div>\r\n                                    ))\r\n                                    }\r\n                                </div>\r\n                                <div className=\"chatBoxBottom\">\r\n                                    <input\r\n                                    type=\"text\"\r\n                                        className=\"chatMessageInput\"\r\n                                        placeholder='write something...'\r\n                                        onChange={(e) => setNewMessage(e.target.value)}\r\n                                        value={newMessage}\r\n                                        onKeyPress={(e) => { e.key === \"Enter\" && handleSubmit(e);\r\n                                    }}\r\n                                    />\r\n                                   \r\n                     {newMessage.length < 1 ? (\r\n                        <button className=\"chatSubmitButton\">\r\n                            <img src={send} alt=\"\" />\r\n                        </button>\r\n                        ) : (\r\n                                    <button className=\"chatSubmitButton\" onClick={handleSubmit}>\r\n                                        <img src={send} alt=\"\" />\r\n                                    </button>\r\n                                     )}\r\n                                </div>\r\n                            </>\r\n                            : (\r\n                                <>\r\n                                    <p className='noConversationText'>Open a conversation to start a chat.</p>\r\n                                </>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"chatOnline col-4 col-sm-2\">\r\n                    <div className=\"chatOnlineWrapper\">\r\n                        <ChatOnline\r\n                            onlineUsers={onlineUsers && onlineUsers}\r\n                            currentId={user._id}\r\n                            setCurrentChat={setCurrentChat}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Messenger"],"names":["dispatch","useDispatch","alert","useAlert","useState","window","location","pathname","tab","setTab","logoutHandler","logoutUser","success","Navbar","expand","className","Container","style","fontSize","textDecoration","color","to","id","Nav","maxHeight","navbarScroll","paddingLeft","onClick","Home","HomeOutlined","PersonSearch","PersonSearchOutlined","Chat","ChatOutlined","NavDropdown","marginTop","title","marginBottom","Logout","onlineUsers","currentId","setCurrentChat","user","useSelector","state","handleClick","axios","_id","data","console","log","length","map","o","src","avatar","url","alt","name","SentimentDissatisfied","following","follow","margin","conversation","currentUser","setUser","useEffect","friendId","members","find","m","getUser","message","own","sender","text","format","createdAt","converstions","setConverstions","currentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","setOnlineUsers","socket","useRef","io","scrollRef","current","on","Date","now","close","includes","prev","emit","users","JSON","parse","filter","f","some","u","userId","getConversations","getMessages","handleSubmit","e","preventDefault","conversationId","receiverId","member","senderId","scrollIntoView","behavior","c","ref","type","placeholder","onChange","target","value","onKeyPress","key","send"],"sourceRoot":""}