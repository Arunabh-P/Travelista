{"version":3,"file":"static/js/430.3eb7cf81.chunk.js","mappings":"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","sources":["Components/user/ResetPassword/ResetPassword.jsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport bg from \"../../../Images/bg2.jpg\";\r\nimport { useAlert } from \"react-alert\"\r\nimport { resetPassword } from \"../../../Actions/User\";\r\nimport \"./ResetPassword.css\"\r\n\r\nfunction ResetPassword() {\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [showNewpassword, setShowNewpassword] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n    const params = useParams();\r\n    const { error, loading, message } = useSelector((state) => state.like);\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(resetPassword(params.token, newPassword))\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch({ type: \"clearErrors\" });\r\n        }\r\n        if (message) {\r\n            alert.success(message);\r\n            dispatch({ type: \"clearMessage\" });\r\n        }\r\n    }, [dispatch, error, alert, message]);\r\n\r\n    return (\r\n        <div className='reset-password' style={{ backgroundImage: `url(${bg})` }}>\r\n            <div className=\"reset-password-container\">\r\n                <h3 className=\"reset-password-header\">Travelista</h3>\r\n                <form className=\"reset-passwordForm\" onSubmit={submitHandler} >\r\n                    <div className='reset-password-dataform'>\r\n                        <input\r\n                            className='reset-password-dataform-password'\r\n                            name=\"password\"\r\n                            value={newPassword}\r\n                            type={showNewpassword ? \"type\" : \"password\"}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                            placeholder='New Password'\r\n                        />\r\n                        <small className='reset-password-show-pass' onClick={() => setShowNewpassword(!showNewpassword)}> {showNewpassword ? \"Hide\" : \"Show\"}</small>\r\n                        <Link to=\"/forgot/password\">\r\n                            <Typography> Request another token</Typography>\r\n                        </Link>\r\n                        <Link to=\"/\">\r\n                            <Typography> Go back to Login Page</Typography>\r\n                        </Link>\r\n                        <button disabled={loading} className='reset-password-dataform-button' type='submit'>Resest Password</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPassword","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport { propToStyleFunction } from '../getThemeValue';\n\nconst splitProps = props => {\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  Object.keys(props).forEach(prop => {\n    if (propToStyleFunction[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\n\nexport default function extendSxProp(props) {\n  const {\n    sx: inSx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}"],"names":["useState","newPassword","setNewPassword","showNewpassword","setShowNewpassword","dispatch","useDispatch","alert","useAlert","params","useParams","useSelector","state","like","error","loading","message","useEffect","type","success","className","style","backgroundImage","bg","onSubmit","e","preventDefault","resetPassword","token","name","value","onChange","target","placeholder","onClick","to","Typography","disabled","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","overridesResolver","props","styles","ownerState","root","variant","align","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","React","inProps","ref","themeProps","useThemeProps","color","transformDeprecatedColors","extendSxProp","component","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","finalSx","inSx","sx","result","systemProps","otherProps","Object","keys","forEach","prop","propToStyleFunction","splitProps","Array","isArray","isPlainObject"],"sourceRoot":""}