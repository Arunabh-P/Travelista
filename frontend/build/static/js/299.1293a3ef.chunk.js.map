{"version":3,"file":"static/js/299.1293a3ef.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/SentimentDissatisfied.js","../format.ts","../index.ts","../lang/en_US.ts","../lang/zh_CN.ts","../locales.ts","../realtime.ts","../utils/date.ts","../utils/dom.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"15.5\",\n  cy: \"9.5\",\n  r: \"1.5\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"8.5\",\n  cy: \"9.5\",\n  r: \"1.5\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-3.5c.73 0 1.39.19 1.97.53.12-.14.86-.98 1.01-1.14-.85-.56-1.87-.89-2.98-.89-1.11 0-2.13.33-2.99.88.97 1.09.01.02 1.01 1.14.59-.33 1.25-.52 1.98-.52z\"\n}, \"2\")], 'SentimentDissatisfied');\n\nexports.default = _default;",null,null,null,null,null,null,null,null,"import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","d","date","locale","opts","sec","date_1","relativeDate","locales_1","EN_US","diff","idx","unit","ZH_CN","Locales","en_US","zh_CN","func","en_US_1","TIMER_POOL","clear","tid","clearTimeout","run","node","localeFunc","dom_1","minInterval","innerText","setTimeout","Math","max","Object","keys","forEach","nodes","nodeList","SEC_ARRAY","toDate","input","Date","isNaN","test","parseInt","trim","replace","agoIn","totalSec","abs","length","rst","i","ATTR_TIMEAGO_TID","getAttribute","timerId","setAttribute","_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","a","push","apply","instance","Function","bind","setPrototypeOf","prototype","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","toString","call","indexOf","TypeError","has","get","set","Wrapper","getPrototypeOf","this","constructor","create","value","enumerable","writable","configurable","PACKET_TYPES","PACKET_TYPES_REVERSE","key","ERROR_PACKET","type","data","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","split","readAsDataURL","supportsBinary","obj","isView","buffer","chars","lookup","Uint8Array","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","mapBinary","encodedPacket","charAt","substring","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","useNativeTimers","setTimeoutFn","globalThis","clearTimeoutFn","prev","TransportError","reason","description","context","Error","Transport","query","readyState","socket","doOpen","doClose","onClose","packets","write","packet","decodePacket","onPacket","details","alphabet","map","seed","encode","num","encoded","floor","yeast","now","str","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","poll","onPause","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","encodePacket","encodePayload","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","path","assign","Request","uri","req","request","method","xhrStatus","onError","onData","pollXhr","async","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","transports","websocket","re","parts","parse","src","b","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","_anyOutgoingListeners","Backoff","ms","min","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}