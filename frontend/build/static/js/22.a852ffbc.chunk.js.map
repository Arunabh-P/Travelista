{"version":3,"file":"static/js/22.a852ffbc.chunk.js","mappings":"6NAOe,SAASA,IACpB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,MAEd,GAA2BC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAAhDC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAkBf,OAXAC,EAAAA,EAAAA,YAAU,WACFF,IACAL,EAAMK,MAAMA,GACZP,EAAS,CAAEU,KAAM,iBAEjBF,IACAN,EAAMS,QAAQH,GACdR,EAAS,CAAEU,KAAM,oBAEtB,CAACV,EAAUE,EAAOK,EAAOC,KAGxB,gBAAKI,UAAU,SAASC,MAAO,CAAEC,gBAAgB,OAAD,OAASC,EAAT,MAAhD,UACI,iBAAKH,UAAU,kBAAf,WACI,eAAIA,UAAU,eAAd,iCACA,eAAIA,UAAU,kBAAd,oBACA,iBAAMA,UAAU,YAAYI,SArBnB,SAACC,GAClBA,EAAEC,iBACFlB,GAASmB,EAAAA,EAAAA,IAAWzB,EAAOE,KAmBnB,UACI,iBAAKgB,UAAU,iBAAf,WACI,kBACIA,UAAU,uBACVF,KAAK,QACLU,YAAY,QACZC,UAAQ,EACRC,MAAO5B,EACP6B,SAAU,SAACN,GAAD,OAAOtB,EAASsB,EAAEO,OAAOF,WAGvC,kBACIV,UAAU,0BACVa,KAAK,WACLH,MAAO1B,EACPc,KAAMZ,EAAW,OAAS,WAC1ByB,SAAU,SAACN,GAAD,OAAOpB,EAAYoB,EAAEO,OAAOF,QACtCF,YAAY,cAChB,mBAAOR,UAAU,kBAAkBc,QAAS,kBAAM3B,GAAaD,IAA/D,cAA4EA,EAAW,OAAS,WAEhG,mBAAQc,UAAU,wBAAwBF,KAAK,SAA/C,gC","sources":["Components/Admin/Login/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport bg from \"../../../Images/bg2.jpg\";\r\nimport { useAlert } from \"react-alert\"\r\nimport \"./Login.css\"\r\nimport { loginAdmin } from \"../../../Actions/Admin\" \r\n\r\nexport default function Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [showpass, setShowpass] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, message } = useSelector((state) => state.admin);\r\n\r\n    const loginHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginAdmin(email, password));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch({ type: \"clearErrors\" });\r\n        }\r\n        if (message) {\r\n            alert.success(message);\r\n            dispatch({ type: \"clearMessage\" });\r\n        }\r\n    }, [dispatch, alert, error, message]);\r\n\r\n    return (\r\n        <div className='login ' style={{ backgroundImage: `url(${bg})` }}>\r\n            <div className=\"login-container\">\r\n                <h3 className=\"login-header\">Travelista - Admin</h3>\r\n                <h6 className=\"login-subheader\">Login</h6>\r\n                <form className=\"loginForm\" onSubmit={loginHandler}>\r\n                    <div className='login-dataform'>\r\n                        <input\r\n                            className='login-dataform-email'\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            required\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        <input\r\n                            className='login-dataform-password'\r\n                            name=\"password\"\r\n                            value={password}\r\n                            type={showpass ? \"type\" : \"password\"}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            placeholder='Password' />\r\n                        <small className='login-show-pass' onClick={() => setShowpass(!showpass)}> {showpass ? \"Hide\" : \"Show\"}</small>\r\n                       \r\n                        <button className='login-dataform-button' type='submit'>Log In</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":["Login","useState","email","setEmail","password","setPassword","showpass","setShowpass","dispatch","useDispatch","alert","useAlert","useSelector","state","admin","error","message","useEffect","type","success","className","style","backgroundImage","bg","onSubmit","e","preventDefault","loginAdmin","placeholder","required","value","onChange","target","name","onClick"],"sourceRoot":""}