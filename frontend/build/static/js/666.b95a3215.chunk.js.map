{"version":3,"file":"static/js/666.b95a3215.chunk.js","mappings":"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","sources":["Actions/Post.js","Components/user/Proposal/ProposalForm.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"likeRequest\",\r\n        });\r\n        const { data } = await axios.get(`/api/v1/post/${id}`);\r\n        dispatch({\r\n            type: \"likeSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"likeFailure\",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const addCommentOnPost = (id, comment) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"addCommentRequest\",\r\n        });\r\n        const { data } = await axios.put(`/api/v1/post/comment/${id}`,\r\n            {\r\n                comment,\r\n            },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n        dispatch({\r\n            type: \"addCommentSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"addCommentFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deleteCommentOnPost = (id, commentId) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"deleteCommentRequest\",\r\n        });\r\n        const { data } = await axios.delete(`/api/v1/post/comment/${id}`, {\r\n            data: { commentId },\r\n        }\r\n        )\r\n        dispatch({\r\n            type: \"deleteCommentSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"deleteCommentFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const createNewPost = (caption, image, tripDate) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"newPostRequest\",\r\n        });\r\n        const { data } = await axios.post(`/api/v1/post/upload`, {\r\n            caption,\r\n            image,\r\n            tripDate,\r\n        }, {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            }\r\n        }\r\n        )\r\n        dispatch({\r\n            type: \"newPostSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"newPostFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const updatePost = (caption, id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"updateCaptionRequest\",\r\n        });\r\n        const { data } = await axios.put(`/api/v1/post/${id}`, {\r\n            caption,\r\n        }, {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            }\r\n        }\r\n        )\r\n        dispatch({\r\n            type: \"updateCaptionSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"updateCaptionFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"deletePostRequest\",\r\n        });\r\n        const { data } = await axios.delete(`/api/v1/post/${id}`)\r\n        dispatch({\r\n            type: \"deletePostSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"deletePostFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const postHostRequest = ({ id, name, place, number, description, service }) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"hostRequest\"\r\n        })\r\n\r\n        const { data } = await axios.post(\r\n            `/api/v1/host/request/${id}`,\r\n            { name, place, number, description, service },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n        dispatch({\r\n            type: \"hostSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"hostFailure\",\r\n            payload: error.response.data.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const postBuddyRequest = ({ id, name, place, number, description }) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"buddyRequest\"\r\n        })\r\n\r\n        const { data } = await axios.post(\r\n            `/api/v1/buddy/request/${id}`,\r\n            { name, place, number, description },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n        dispatch({\r\n            type: \"buddySuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"buddyFailure\",\r\n            payload: error.response.data.message,\r\n        })\r\n    }\r\n};","import React, { useEffect, useState } from 'react';\r\nimport \"./Proposal.css\"\r\nimport TextField from '@mui/material/TextField';\r\nimport { loadUser } from \"../../../Actions/User\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useAlert } from \"react-alert\"\r\nimport { postBuddyRequest, postHostRequest } from '../../../Actions/Post';\r\nimport { useParams } from 'react-router-dom';\r\nimport thinking from \"../../../../src/Images/thinking.png\"\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nfunction ProposalForm() {\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n    const [name, setName] = useState(\"\");\r\n    const [place, setPlace] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [service, setService] = useState(\"\");\r\n\r\n    const params = useParams()\r\n\r\n    const dispatch = useDispatch()\r\n    const alert = useAlert();\r\n\r\n\r\n    const { loading, error, message } = useSelector((state) => state.like)\r\n\r\n    const buddySubmitHandler = async (e) => {\r\n        e.preventDefault()\r\n        await dispatch(postBuddyRequest({ id: params.id, name, place, number, description }))\r\n        dispatch(loadUser());\r\n    }\r\n\r\n    const hostSubmitHandler = async (e) => {\r\n        e.preventDefault()\r\n        await dispatch(postHostRequest({ id: params.id, name, place, number, description, service }))\r\n        dispatch(loadUser());\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch({ type: \"clearErrors\" })\r\n        }\r\n\r\n        if (message) {\r\n            alert.success(message);\r\n            dispatch({ type: \"clearErrors\" })\r\n        }\r\n\r\n    }, [dispatch, error, message, alert])\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='update-password' >\r\n                <div className=\"container serch-container mb-4 \">\r\n                    <div className=\"row update-row p-4 rounded mt-4\">\r\n                        <div className=\"col-lg-6 update-img p-5\">\r\n                            <img className=\"proposal-img\" src={thinking} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"col-lg-6 px-5\">\r\n                            <Box sx={{ bgcolor: 'background.paper' }}>\r\n                                <AppBar position=\"static\" >\r\n                                    <Tabs\r\n                                        value={value}\r\n                                        onChange={handleChange}\r\n                                        indicatorColor=\"secondary\"\r\n                                        textColor=\"inherit\"\r\n                                        variant=\"fullWidth\"\r\n                                        aria-label=\"full width tabs example\"\r\n                                    >\r\n                                        <Tab label=\"Buddy request\" {...a11yProps(0)} />\r\n                                        <Tab label=\"Host request\" {...a11yProps(1)} />\r\n                                    </Tabs>\r\n                                </AppBar>\r\n                                <SwipeableViews\r\n                                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                                    index={value}\r\n                                    onChangeIndex={handleChangeIndex}\r\n                                >\r\n                                    <TabPanel value={value} index={0} dir={theme.direction}  >\r\n                                        <div className=\"buddy-form-container\">\r\n                                            <form onSubmit={buddySubmitHandler}>\r\n                                                <div className='buddy-form-div'>\r\n                                                    <TextField\r\n                                                        id=\"fullWidth\"\r\n                                                        label=\"Name\"\r\n                                                        className='mb-4'\r\n                                                        value={name}\r\n                                                        required\r\n                                                        onChange={(e) => setName(e.target.value)}\r\n                                                    />\r\n                                                    <TextField\r\n                                                        id=\"outlined-number\"\r\n                                                        label=\"Contact Number\"\r\n                                                        type=\"number\"\r\n                                                        className='mb-4'\r\n                                                        value={number}\r\n                                                        required\r\n                                                        onChange={(e) => setNumber(e.target.value)}\r\n                                                    />\r\n                                                    <TextField\r\n                                                        id=\"fullWidth\"\r\n                                                        label=\"Place\"\r\n                                                        className='mb-4'\r\n                                                        value={place}\r\n                                                        required\r\n                                                        onChange={(e) => setPlace(e.target.value)}\r\n                                                    />\r\n                                                    <TextField\r\n                                                        id=\"outlined-multiline-static\"\r\n                                                        label=\"Description\"\r\n                                                        multiline\r\n                                                        rows={4}\r\n                                                        className=' '\r\n                                                        value={description}\r\n                                                        onChange={(e) => setDescription(e.target.value)}\r\n                                                    />\r\n                                                    <button disabled={loading} className='proposal-dataform-button' type='submit'>Submit</button>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n\r\n                                    </TabPanel>\r\n                                    <TabPanel value={value} index={1} dir={theme.direction}>\r\n\r\n                                        <div className=\"buddy-form-container\">\r\n                                            <form onSubmit={hostSubmitHandler}>\r\n                                                <div className='buddy-form-div'>\r\n\r\n\r\n                                                    <TextField\r\n                                                        id=\"fullWidth\"\r\n                                                        label=\"Name\"\r\n                                                        className='mb-4'\r\n                                                        value={name}\r\n                                                        onChange={(e) => setName(e.target.value)}\r\n                                                    />\r\n                                                    <TextField\r\n                                                        id=\"outlined-number\"\r\n                                                        label=\"Contact Number\"\r\n                                                        type=\"number\"\r\n                                                        className='mb-4'\r\n                                                        value={number}\r\n                                                        onChange={(e) => setNumber(e.target.value)}\r\n\r\n                                                    />\r\n                                                    <TextField\r\n                                                        id=\"fullWidth\"\r\n                                                        label=\"Service you are providing?\"\r\n                                                        className='mb-4'\r\n                                                        value={service}\r\n                                                        onChange={(e) => setService(e.target.value)}\r\n                                                    />\r\n\r\n                                                    <TextField\r\n                                                        id=\"outlined-multiline-static\"\r\n                                                        label=\"Detail Description\"\r\n                                                        multiline\r\n                                                        rows={4}\r\n                                                        value={description}\r\n                                                        onChange={(e) => setDescription(e.target.value)}\r\n\r\n                                                    />\r\n\r\n\r\n                                                    <button className='proposal-dataform-button' type='submit'>Submit</button>\r\n\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n\r\n                                    </TabPanel>\r\n                                </SwipeableViews>\r\n                            </Box>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div >\r\n\r\n            </div >\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProposalForm"],"names":["likePost","id","dispatch","type","axios","data","payload","message","response","addCommentOnPost","comment","headers","deleteCommentOnPost","commentId","createNewPost","caption","image","tripDate","updatePost","deletePost","postHostRequest","name","place","number","description","service","postBuddyRequest","TabPanel","props","children","value","index","other","role","hidden","Box","sx","p","Typography","a11yProps","theme","useTheme","React","setValue","useState","setName","setPlace","setNumber","setDescription","setService","params","useParams","useDispatch","alert","useAlert","useSelector","state","like","loading","error","buddySubmitHandler","e","preventDefault","loadUser","hostSubmitHandler","useEffect","success","className","src","thinking","alt","bgcolor","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","Tab","label","axis","direction","onChangeIndex","dir","onSubmit","TextField","required","target","multiline","rows","disabled"],"sourceRoot":""}