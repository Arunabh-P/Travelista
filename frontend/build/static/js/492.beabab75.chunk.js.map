{"version":3,"file":"static/js/492.beabab75.chunk.js","mappings":"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","sources":["Actions/Post.js","Components/user/CommentCard/CommentCard.jsx","Components/user/Header/CommonHeader.js","Components/user/Post/Post.jsx","Components/user/User/User.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"likeRequest\",\r\n        });\r\n        const { data } = await axios.get(`/api/v1/post/${id}`);\r\n        dispatch({\r\n            type: \"likeSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"likeFailure\",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const addCommentOnPost = (id, comment) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"addCommentRequest\",\r\n        });\r\n        const { data } = await axios.put(`/api/v1/post/comment/${id}`,\r\n            {\r\n                comment,\r\n            },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n        dispatch({\r\n            type: \"addCommentSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"addCommentFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deleteCommentOnPost = (id, commentId) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"deleteCommentRequest\",\r\n        });\r\n        const { data } = await axios.delete(`/api/v1/post/comment/${id}`, {\r\n            data: { commentId },\r\n        }\r\n        )\r\n        dispatch({\r\n            type: \"deleteCommentSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"deleteCommentFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const createNewPost = (caption, image, tripDate) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"newPostRequest\",\r\n        });\r\n        const { data } = await axios.post(`/api/v1/post/upload`, {\r\n            caption,\r\n            image,\r\n            tripDate,\r\n        }, {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            }\r\n        }\r\n        )\r\n        dispatch({\r\n            type: \"newPostSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"newPostFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const updatePost = (caption, id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"updateCaptionRequest\",\r\n        });\r\n        const { data } = await axios.put(`/api/v1/post/${id}`, {\r\n            caption,\r\n        }, {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            }\r\n        }\r\n        )\r\n        dispatch({\r\n            type: \"updateCaptionSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"updateCaptionFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"deletePostRequest\",\r\n        });\r\n        const { data } = await axios.delete(`/api/v1/post/${id}`)\r\n        dispatch({\r\n            type: \"deletePostSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"deletePostFailure \",\r\n            payload: error.response.data.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const postHostRequest = ({ id, name, place, number, description, service }) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"hostRequest\"\r\n        })\r\n\r\n        const { data } = await axios.post(\r\n            `/api/v1/host/request/${id}`,\r\n            { name, place, number, description, service },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n        dispatch({\r\n            type: \"hostSuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"hostFailure\",\r\n            payload: error.response.data.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const postBuddyRequest = ({ id, name, place, number, description }) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"buddyRequest\"\r\n        })\r\n\r\n        const { data } = await axios.post(\r\n            `/api/v1/buddy/request/${id}`,\r\n            { name, place, number, description },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n        dispatch({\r\n            type: \"buddySuccess\",\r\n            payload: data.message,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"buddyFailure\",\r\n            payload: error.response.data.message,\r\n        })\r\n    }\r\n};","import { Button, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./CommentCard.css\";\r\nimport { Delete } from \"@mui/icons-material\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteCommentOnPost } from '../../../Actions/Post';\r\nimport { getFollowingPosts, getMyPosts } from '../../../Actions/User';\r\n\r\n\r\nfunction CommentCard({\r\n  userId,\r\n  name,\r\n  avatar,\r\n  comment,\r\n  commentId,\r\n  postId,\r\n  isAccount,\r\n}) {\r\n\r\n  const { user } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteCommentHandle = () => {\r\n    dispatch(deleteCommentOnPost(postId, commentId));\r\n    if (isAccount) {\r\n      dispatch(getMyPosts());\r\n    } else {\r\n      dispatch(getFollowingPosts());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"commentUser\">\r\n      <Link to={`/user/${userId}`}>\r\n        <img src={avatar} alt={name} />\r\n        <Typography style={{ minWidth: \"6vmax\" }}>{name}</Typography>\r\n      </Link>\r\n      <Typography className=\"comment-tab\">\r\n        {comment}\r\n      </Typography>\r\n      {isAccount ? (\r\n        <Button onClick={deleteCommentHandle} >\r\n          <Delete />\r\n        </Button>\r\n      ) : userId === user._id ? (\r\n        <Button style={{ color: \"black\" }} onClick={deleteCommentHandle} >\r\n          <Delete />\r\n        </Button>\r\n      ) : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentCard","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\"\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom'\r\nimport ChatOutlinedIcon from \"@mui/icons-material/ChatOutlined\";\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport HomeOutlinedIcon from \"@mui/icons-material/HomeOutlined\";\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport UserProfile from '@mui/icons-material/AccountCircleOutlined';\r\nimport PersonSearchOutlinedIcon from '@mui/icons-material/PersonSearchOutlined';\r\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\r\nimport { logoutUser } from \"../../../Actions/User\"\r\nimport { useAlert } from \"react-alert\"\r\nimport { NavDropdown } from \"react-bootstrap\"\r\nimport \"./CommonHeader.css\"\r\n\r\n\r\nfunction Header() {\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const [tab, setTab] = useState(window.location.pathname);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logoutUser());\r\n    alert.success(\"Logged out successfully\")\r\n  }\r\n\r\n  return (\r\n\r\n    <Navbar expand=\"lg\" className=\" sticky-top  w-100 bg-white  \">\r\n      <Container >\r\n        <Navbar.Brand style={{ fontSize: \"30px\" }}>\r\n          <Link style={{ textDecoration: \"none\", color: \"black\" }} to={'/'}> Travelista</Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Nav\r\n            className=\"me-auto my-2 my-lg-0\"\r\n            style={{ maxHeight: \"100px\" }}\r\n            navbarScroll\r\n          ></Nav>\r\n          <Nav>\r\n            <div className=\"d-none d-lg-flex\">\r\n              <Link to=\"/\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/\")}>\r\n                {tab === \"/\" ? <HomeIcon /> : <HomeOutlinedIcon />}\r\n              </Link>\r\n              <Link to=\"/search\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/search\")} >\r\n                {tab === \"/search\" ? <PersonSearchIcon /> : <PersonSearchOutlinedIcon />}\r\n              </Link>\r\n              <Link to=\"/messenger\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/messenger\")} >\r\n                {tab === \"/messenger\" ? <ChatIcon /> : <ChatOutlinedIcon />}\r\n              </Link>\r\n              <NavDropdown style={{ color: \"black\", paddingLeft: \"22.5px\", marginTop: \"-8px\" }} title={<UserProfile style={{ color: \"black\" }} />} id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item >\r\n                  <Link to=\"/account\" className=\"account-text-header\" >Account</Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item>\r\n                  <Link to=\"/update/password\" className=\"account-text-header\">Change Password</Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item>\r\n                  <Link to=\"/update/profile\" className=\"account-text-header\">Edit Profile</Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item>\r\n                  <p onClick={(logoutHandler)} style={{ marginBottom: \"0\" }}>\r\n                    <LogoutIcon /> LogOut\r\n                  </p>\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </div>\r\n            <div className=\"d-lg-none d-flex justify-content-start row\">\r\n              <div className=\"home-md-icons row\">\r\n                <div className=\"each-list-icons dropdown-item\" >\r\n                  <Link to=\"/\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} className=\"icon-in-header\" onClick={() => setTab(\"/\")}>\r\n                    {tab === \"/\" ? <HomeIcon /> : <HomeOutlinedIcon />} Home\r\n                  </Link>\r\n                </div>\r\n                <div className=\"each-list-icons dropdown-item\">\r\n                  <Link to=\"/search\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/search\")} className=\"icon-in-header\" >\r\n                    {tab === \"/search\" ? <PersonSearchIcon /> : <PersonSearchOutlinedIcon />} Search\r\n                  </Link>\r\n                </div>\r\n                <div className=\"each-list-icons dropdown-item\">\r\n                  <Link to=\"/messenger\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/messenger\")} className=\"icon-in-header\" >\r\n                    {tab === \"/messenger\" ? <ChatIcon /> : <ChatOutlinedIcon />} Chat\r\n                  </Link>\r\n                </div>\r\n                <div className=\"each-list-icons\">\r\n                  <NavDropdown style={{ color: \"black\", paddingLeft: \"22.5px\", marginTop: \"-8px\" }} title=\"Account\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item >\r\n                      <Link to=\"/account\" className=\"account-text-header\" >Account</Link>\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item>\r\n                      <Link to=\"/update/password\" className=\"account-text-header\">Change Password</Link>\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item>\r\n                      <Link to=\"/update/profile\" className=\"account-text-header\">Edit Profile</Link>\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item>\r\n                      <p onClick={(logoutHandler)} style={{ marginBottom: \"0\" }}>\r\n                        <LogoutIcon /> LogOut\r\n                      </p>\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Avatar, Button, Typography, Dialog } from \"@mui/material\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n    MoreVert,\r\n    Favorite,\r\n    FavoriteBorder,\r\n    ChatBubbleOutline,\r\n    DeleteOutline,\r\n    VolunteerActivism\r\n} from \"@mui/icons-material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Post.css\"\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCommentOnPost, deletePost, likePost, updatePost } from \"../../../Actions/Post\"\r\nimport { getFollowingPosts, getMyPosts, loadUser } from \"../../../Actions/User\";\r\nimport User from \"../User/User\";\r\nimport CommentCard from \"../CommentCard/CommentCard\";\r\nimport { format } from \"timeago.js\"\r\nimport { FaRegHandPeace } from \"react-icons/fa\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport FlutterDashOutlinedIcon from '@mui/icons-material/FlutterDashOutlined';\r\n\r\nfunction Post({\r\n    postId,\r\n    caption,\r\n    postImage,\r\n    likes = [],\r\n    comments = [],\r\n    ownerImage,\r\n    tripDate,\r\n    createdAt,\r\n    ownerName,\r\n    ownerId,\r\n    isDelete = false,\r\n    isAccount = false,\r\n    width,\r\n    host = [],\r\n    buddy = [],\r\n}) {\r\n    const [liked, setLiked] = useState(false);\r\n    const [likesUser, setLikesUser] = useState(false);\r\n    const [commentValue, setCommentValue] = useState(\"\");\r\n    const [commentToggle, setCommentToggle] = useState(false);\r\n    const [captionValue, setCaptionValue] = useState(caption);\r\n    const [captionToggle, setCaptionToggle] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector((state) => state.user)\r\n\r\n    const handleLike = async () => {\r\n        setLiked(!liked);\r\n        await dispatch(likePost(postId));\r\n        if (isAccount) {\r\n            dispatch(getMyPosts())\r\n        } else {\r\n            dispatch(getFollowingPosts())\r\n        }\r\n    }\r\n\r\n    const addCommentHandler = async (e) => {\r\n        e.preventDefault();\r\n        await dispatch(addCommentOnPost(postId, commentValue))\r\n        if (isAccount) {\r\n            dispatch(getMyPosts())\r\n        } else {\r\n            dispatch(getFollowingPosts())\r\n        }\r\n    }\r\n\r\n    const updateCaptionHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updatePost(captionValue, postId))\r\n        dispatch(getMyPosts())\r\n    }\r\n\r\n    const deletePostHandler = async () => {\r\n        await dispatch(deletePost(postId));\r\n        dispatch(getMyPosts())\r\n        dispatch(loadUser())\r\n    }\r\n\r\n    useEffect(() => {\r\n        likes.forEach((item) => {\r\n            if (item._id === user._id) {\r\n                setLiked(true);\r\n            }\r\n        });\r\n    }, [likes, user._id]);\r\n\r\n\r\n    return (\r\n        <div className=\"post\" style={{ width: width }}>\r\n            <div className=\"postHeader\">\r\n                {isAccount ? (\r\n                    <Button onClick={() => setCaptionToggle(!captionToggle)}>\r\n                        <MoreVert />\r\n                    </Button>\r\n                ) : null}\r\n            </div>\r\n            <img src={postImage} alt=\"Post\" />\r\n\r\n            <div className=\"postDetails\">\r\n                <Avatar src={ownerImage} alt=\"user\"\r\n                    sz={{\r\n                        height: \"3vmax\",\r\n                        width: \"3vmax\"\r\n                    }}\r\n                />\r\n                <Link to={`/user/${ownerId}`}>\r\n                    <Typography fontWeight={700}>{ownerName}</Typography>\r\n                </Link>\r\n                <Typography\r\n                    fontWeight={100}\r\n                    color=\"rgba(0, 0, 0, 0.582)\"\r\n                    style={{ alignSelf: \"center\" }}\r\n                >\r\n                    {caption} </Typography>\r\n\r\n\r\n                <Typography\r\n                    fontWeight={100}\r\n                    color=\"rgba(0, 0, 0, 0.582)\"\r\n                    style={{ alignSelf: \"center\"}}\r\n                >\r\n                    <span > &#160; {format(createdAt)} </span>\r\n                </Typography>\r\n\r\n            </div>\r\n            {\r\n                tripDate ? <Typography\r\n                    // fontWeight={100}\r\n                    color=\"rgba(0, 0, 0, 0.582)\"\r\n                    style={{ alignSelf: \"center\" }}\r\n                >\r\n                    &#160; <span style={{ fontSize:'.9rem' }} className=\"mt-1 pl-5\">&#160; Trip planned on {tripDate} </span>\r\n                </Typography> : \"\"\r\n            }\r\n            <Button\r\n                style={{\r\n                    border: \"none\",\r\n                    backgroundColor: \"white\",\r\n                    cursor: \"pointer\",\r\n                    marginLeft:'1rem',\r\n                }}\r\n                onClick={() => setLikesUser(!likesUser)}\r\n                disabled={likes.length === 0 ? true : false}\r\n            >\r\n                <Typography>{likes.length} likes</Typography>\r\n            </Button>\r\n            <div className=\"postFooter\">\r\n                <Button onClick={handleLike} className=\"InputOptions\">\r\n                    {liked ? <Favorite /> : <FavoriteBorder />}\r\n                </Button>\r\n                <Button onClick={() => setCommentToggle(!commentToggle)}>\r\n                    <ChatBubbleOutline />\r\n                </Button>\r\n\r\n                    <Button className=\"InputOptions\" >\r\n                <OverlayTrigger overlay={<Tooltip id='tooltip-top'>Give a proposal</Tooltip>}>\r\n                        <Link to={`/proposal/${postId}`} className=\" proposal-button\">\r\n                            <FlutterDashOutlinedIcon />\r\n                        </Link>\r\n                </OverlayTrigger>\r\n                    </Button>\r\n\r\n                {isDelete ? (\r\n                    <Button onClick={deletePostHandler}>\r\n                        <DeleteOutline />\r\n                    </Button>\r\n                ) : null}\r\n\r\n\r\n            </div>\r\n            <Dialog className=\"Dialogbox-scroll\" open={likesUser} onClose={() => setLikesUser(!likesUser)}>\r\n                <div className=\"DialogBoxPost\">\r\n                    {likes.map((like) => (\r\n                        <User\r\n                            key={like._id}\r\n                            userId={like._id}\r\n                            name={like.name}\r\n                            avatar={like.avatar.url}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </Dialog>\r\n            <Dialog className=\"Dialogbox-scroll\"\r\n                open={commentToggle}\r\n                onClose={() => setCommentToggle(!commentToggle)}\r\n            >\r\n                <div className=\"DialogBox2 p-5\">\r\n                    <form className=\" col-12  p-5 mt-2\" onSubmit={addCommentHandler}>\r\n                        <textarea name=\"\" value={commentValue}  \r\n                        onChange={(e) => setCommentValue(e.target.value)}\r\n                        id=\"\" cols=\"20\" rows=\"3\"\r\n                        className=\"w-100 \"\r\n                        />\r\n                        <Button className=\"add-butto col-12 \"type=\"submit\" variant=\"contained\"  >\r\n                            Add Comment\r\n                        </Button>\r\n                    </form>\r\n\r\n\r\n\r\n                   \r\n                    {comments.length > 0 ? (\r\n                        comments.map((item) => (\r\n                            <CommentCard\r\n                                userId={item.user._id}\r\n                                name={item.user.name}\r\n                                avatar={item.user.avatar.url}\r\n                                comment={item.comment}\r\n                                commentId={item._id}\r\n                                key={item._id}\r\n                                postId={postId}\r\n                                isAccount={isAccount}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        <Typography>No comments Yet</Typography>\r\n                    )}\r\n                </div>\r\n            </Dialog>\r\n            <Dialog className=\"Dialogbox-scroll\"\r\n                open={captionToggle}\r\n                onClose={() => setCaptionToggle(!captionToggle)}\r\n            >\r\n                <div className=\"DialogBox\">\r\n                    <Typography variant=\"h4\">Update caption</Typography>\r\n                    <form className=\"commentForm\" onSubmit={updateCaptionHandler}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={captionValue}\r\n                            onChange={(e) => setCaptionValue(e.target.value)}\r\n                            placeholder=\"Caption Here...\"\r\n                            required\r\n                        />\r\n                        <Button className=\"add-button\" type=\"submit\" variant=\"contained\"  >\r\n                            Update\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Typography } from \"@mui/material\"\r\nimport \"./all-users-list.css\"\r\nfunction User({ userId, name, avatar }) {\r\n    return (\r\n        <>\r\n            <div className=\"row d-flex \">\r\n                <div className=\"col-8\">\r\n                    <Link to={`/user/${userId}`} className=\"users-home-list\">\r\n                        <img src={avatar} alt={name} />\r\n                        <Typography>{name}</Typography>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default User"],"names":["likePost","id","dispatch","type","axios","data","payload","message","response","addCommentOnPost","comment","headers","deleteCommentOnPost","commentId","createNewPost","caption","image","tripDate","updatePost","deletePost","postHostRequest","name","place","number","description","service","postBuddyRequest","userId","avatar","postId","isAccount","user","useSelector","state","useDispatch","deleteCommentHandle","getMyPosts","getFollowingPosts","className","to","src","alt","Typography","style","minWidth","Button","onClick","Delete","_id","color","alert","useAlert","useState","window","location","pathname","tab","setTab","logoutHandler","logoutUser","success","Navbar","expand","Container","fontSize","textDecoration","Nav","maxHeight","navbarScroll","paddingLeft","Home","HomeOutlined","PersonSearch","PersonSearchOutlined","Chat","ChatOutlined","NavDropdown","marginTop","title","marginBottom","Logout","postImage","likes","comments","ownerImage","createdAt","ownerName","ownerId","isDelete","width","host","buddy","liked","setLiked","likesUser","setLikesUser","commentValue","setCommentValue","commentToggle","setCommentToggle","captionValue","setCaptionValue","captionToggle","setCaptionToggle","handleLike","addCommentHandler","e","preventDefault","deletePostHandler","loadUser","useEffect","forEach","item","MoreVert","Avatar","sz","height","fontWeight","alignSelf","format","border","backgroundColor","cursor","marginLeft","disabled","length","Favorite","FavoriteBorder","ChatBubbleOutline","OverlayTrigger","overlay","Tooltip","FlutterDashOutlined","DeleteOutline","Dialog","open","onClose","map","like","url","onSubmit","value","onChange","target","cols","rows","variant","CommentCard","placeholder","required"],"sourceRoot":""}