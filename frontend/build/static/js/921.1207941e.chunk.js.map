{"version":3,"file":"static/js/921.1207941e.chunk.js","mappings":"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","sources":["Components/user/Header/CommonHeader.js","Components/user/ProfilePicCropper/getCroppedImg.js","Components/user/ProfilePicCropper/CropImage.js","Components/user/UpdateProfile/UpdateProfile.jsx","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormControl.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\"\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom'\r\nimport ChatOutlinedIcon from \"@mui/icons-material/ChatOutlined\";\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport HomeOutlinedIcon from \"@mui/icons-material/HomeOutlined\";\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport UserProfile from '@mui/icons-material/AccountCircleOutlined';\r\nimport PersonSearchOutlinedIcon from '@mui/icons-material/PersonSearchOutlined';\r\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\r\nimport { logoutUser } from \"../../../Actions/User\"\r\nimport { useAlert } from \"react-alert\"\r\nimport { NavDropdown } from \"react-bootstrap\"\r\nimport \"./CommonHeader.css\"\r\n\r\n\r\nfunction Header() {\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const [tab, setTab] = useState(window.location.pathname);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logoutUser());\r\n    alert.success(\"Logged out successfully\")\r\n  }\r\n\r\n  return (\r\n\r\n    <Navbar expand=\"lg\" className=\" sticky-top  w-100 bg-white  \">\r\n      <Container >\r\n        <Navbar.Brand style={{ fontSize: \"30px\" }}>\r\n          <Link style={{ textDecoration: \"none\", color: \"black\" }} to={'/'}> Travelista</Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Nav\r\n            className=\"me-auto my-2 my-lg-0\"\r\n            style={{ maxHeight: \"100px\" }}\r\n            navbarScroll\r\n          ></Nav>\r\n          <Nav>\r\n            <div className=\"d-none d-lg-flex\">\r\n              <Link to=\"/\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/\")}>\r\n                {tab === \"/\" ? <HomeIcon /> : <HomeOutlinedIcon />}\r\n              </Link>\r\n              <Link to=\"/search\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/search\")} >\r\n                {tab === \"/search\" ? <PersonSearchIcon /> : <PersonSearchOutlinedIcon />}\r\n              </Link>\r\n              <Link to=\"/messenger\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/messenger\")} >\r\n                {tab === \"/messenger\" ? <ChatIcon /> : <ChatOutlinedIcon />}\r\n              </Link>\r\n              <NavDropdown style={{ color: \"black\", paddingLeft: \"22.5px\", marginTop: \"-8px\" }} title={<UserProfile style={{ color: \"black\" }} />} id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item >\r\n                  <Link to=\"/account\" className=\"account-text-header\" >Account</Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item>\r\n                  <Link to=\"/update/password\" className=\"account-text-header\">Change Password</Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item>\r\n                  <Link to=\"/update/profile\" className=\"account-text-header\">Edit Profile</Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item>\r\n                  <p onClick={(logoutHandler)} style={{ marginBottom: \"0\" }}>\r\n                    <LogoutIcon /> LogOut\r\n                  </p>\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </div>\r\n            <div className=\"d-lg-none d-flex justify-content-start row\">\r\n              <div className=\"home-md-icons row\">\r\n                <div className=\"each-list-icons dropdown-item\" >\r\n                  <Link to=\"/\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} className=\"icon-in-header\" onClick={() => setTab(\"/\")}>\r\n                    {tab === \"/\" ? <HomeIcon /> : <HomeOutlinedIcon />} Home\r\n                  </Link>\r\n                </div>\r\n                <div className=\"each-list-icons dropdown-item\">\r\n                  <Link to=\"/search\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/search\")} className=\"icon-in-header\" >\r\n                    {tab === \"/search\" ? <PersonSearchIcon /> : <PersonSearchOutlinedIcon />} Search\r\n                  </Link>\r\n                </div>\r\n                <div className=\"each-list-icons dropdown-item\">\r\n                  <Link to=\"/messenger\" style={{ color: \"black\", paddingLeft: \"22.5px\" }} onClick={() => setTab(\"/messenger\")} className=\"icon-in-header\" >\r\n                    {tab === \"/messenger\" ? <ChatIcon /> : <ChatOutlinedIcon />} Chat\r\n                  </Link>\r\n                </div>\r\n                <div className=\"each-list-icons\">\r\n                  <NavDropdown style={{ color: \"black\", paddingLeft: \"22.5px\", marginTop: \"-8px\" }} title=\"Account\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item >\r\n                      <Link to=\"/account\" className=\"account-text-header\" >Account</Link>\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item>\r\n                      <Link to=\"/update/password\" className=\"account-text-header\">Change Password</Link>\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item>\r\n                      <Link to=\"/update/profile\" className=\"account-text-header\">Edit Profile</Link>\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item>\r\n                      <p onClick={(logoutHandler)} style={{ marginBottom: \"0\" }}>\r\n                        <LogoutIcon /> LogOut\r\n                      </p>\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export function getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas')\r\n    const scaleX = image.naturalWidth / image.width\r\n    const scaleY = image.naturalHeight / image.height\r\n    canvas.width = crop.width\r\n    canvas.height = crop.height\r\n    const ctx = canvas.getContext('2d')\r\n    const pixelRatio = window.devicePixelRatio\r\n    canvas.width = crop.width * pixelRatio\r\n    canvas.height = crop.height * pixelRatio\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0)\r\n    ctx.imageSmoothingQuality = 'high'\r\n  \r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    )\r\n  \r\n    const base64Image = canvas.toDataURL(\"image/jpeg\");\r\n    return base64Image;\r\n  \r\n    \r\n  }","import React, { useRef } from 'react'\r\nimport { Button, Col, Container } from 'react-bootstrap'\r\nimport Cropper from 'react-cropper'\r\nimport 'cropperjs/dist/cropper.css'\r\nimport { getCroppedImg } from './getCroppedImg'\r\n\r\nconst CropImage = ({ src, imageCallback, closeHander }) => {\r\n\r\n  const cropperRef = useRef(null)\r\n  const cropDetailsRef = useRef(null)\r\n\r\n  const onCrop = (e) => (cropDetailsRef.current = e.detail)\r\n\r\n  const clickHndler = async () => {\r\n    const croppedImage = await getCroppedImg(\r\n      cropperRef.current,\r\n      cropDetailsRef.current,\r\n      src.name\r\n    )\r\n    imageCallback(croppedImage)\r\n  }\r\n\r\n  return (\r\n    <div style={{ zIndex: 9999, top: \"2rem\", minWidth: \"24rem\", maxWidth: \"40rem\" }}>\r\n      <Container className=\" text-center bg-white shadow rounded-2 mx-auto p-2 m-0\">\r\n        <Col xs={12} className=\"text-center  \">\r\n          <Cropper\r\n            src={src ? URL.createObjectURL(src) : ''}\r\n            className=\"image-fulid\"\r\n            style={{ height: '500px' }}\r\n            aspectRatio={500 / 500}\r\n            guides={false}\r\n            crop={onCrop}\r\n            ref={cropperRef}\r\n            zoomable={true}\r\n            movable={false}\r\n            minCropBoxWidth={200}\r\n            minCropBoxHeight={250}\r\n          />\r\n          <div className=\"text-center\">\r\n          </div>\r\n          <div className=\"px-auto py-2 text-center\">\r\n            <Button\r\n              type=\"button\"\r\n              className=\"btn-danger us-btn-danger mx-1\"\r\n              style={{ width: 'fit-content' }}\r\n              onClick={closeHander}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              className=\"us-btn mx-1\"\r\n              style={{ width: 'fit-content' }}\r\n              onClick={clickHndler}\r\n            >\r\n              Crop\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CropImage","import \"./UpdateProfile.css\"\r\nimport { useAlert } from \"react-alert\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport CropImage from \"../../user/ProfilePicCropper/CropImage\"\r\nimport Header from \"../Header/CommonHeader\"\r\n\r\nimport {\r\n  loadUser,\r\n  updateProfileUser\r\n} from \"../../../Actions/User\"\r\n\r\nexport default function UpdateProfile() {\r\n\r\n  const { error, user } = useSelector((state) => state.user)\r\n  const { loading: updateLoading,\r\n    error: updateError,\r\n    message\r\n  } = useSelector((state) => state.like)\r\n  const [name, setName] = useState(user.name);\r\n  const [email, setEmail] = useState(user.email);\r\n  const [bio, setBio] = useState(user.bio);\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [avatarPrev, setAvatarPrev] = useState(user.avatar.url);\r\n  const [showCropper, setShowCropper] = useState(false);\r\n  const [cropImage, setCropImage] = useState(false);\r\n  const dispatch = useDispatch()\r\n  const alert = useAlert();\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    await dispatch(updateProfileUser(name, email, avatar, bio))\r\n    dispatch(loadUser())\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch({ type: \"clearErrors\" });\r\n    }\r\n    if (updateError) {\r\n      alert.error(updateError);\r\n      dispatch({ type: \"clearErrors\" });\r\n    }\r\n    if (message) {\r\n      alert.success(message);\r\n      dispatch({ type: \"clearMessage\" });\r\n    }\r\n  }, [dispatch, error, alert, updateError, message]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n    <div className='update' >\r\n      <div className=\"update-profile-headline p-5\">\r\n        <h3>Update Profile</h3>\r\n      </div>\r\n      <div className=\"container mb-4 \">\r\n        <form onSubmit={submitHandler} >\r\n          <div className='update-dataform'>\r\n            <div className=\"row update-row p-4 rounded  d-flex justify-content-center \">\r\n              <FormControl\r\n                className=\"crop_image d-none\"\r\n                id=\"upload_image\"\r\n                type=\"file\"\r\n                name=\"crop_image\"\r\n                onChange={(e) => {\r\n                  setCropImage(e.target.files[0]);\r\n                  setShowCropper(true);\r\n                }}\r\n                accept=\".jpg,.jpeg,.png,\"\r\n              />\r\n              <label htmlFor=\"upload_image\">\r\n                <span className=\"profilepic__icon\">\r\n                  <img className=\"update-avatar\"\r\n                    src={avatar ? avatar : avatarPrev}\r\n                    value={avatarPrev}\r\n                    alt=\"User\"\r\n                    width=\"150\"\r\n                    style={{ borderRadius: \"20%\" }}\r\n                  />\r\n                </span>\r\n              </label>\r\n              {showCropper && (\r\n                <CropImage\r\n                  src={cropImage}\r\n                  imageCallback={(avatar) => {\r\n                    setAvatar(avatar);\r\n                    setShowCropper(false);\r\n                  }}\r\n                  closeHander={() => {\r\n                    setShowCropper(false);\r\n                  }}\r\n                />\r\n              )}\r\n              <div className=\"update-texts-pro\">\r\n                <input\r\n                  className='update-dataform-email'\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  required\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <input\r\n                  className='update-dataform-email'\r\n                  type=\"text\"\r\n                  placeholder=\"Bio\"\r\n                  required\r\n                  value={bio}\r\n                  onChange={(e) => setBio(e.target.value)}\r\n                />\r\n                <input\r\n                  className='update-dataform-email'\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <button disabled={updateLoading} className='update-dataform-button' type='submit'>Update</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div >\r\n    </div >\r\n    </>\r\n  );\r\n}\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});"],"names":["dispatch","useDispatch","alert","useAlert","useState","window","location","pathname","tab","setTab","logoutHandler","logoutUser","success","Navbar","expand","className","Container","style","fontSize","textDecoration","color","to","id","Nav","maxHeight","navbarScroll","paddingLeft","onClick","Home","HomeOutlined","PersonSearch","PersonSearchOutlined","Chat","ChatOutlined","NavDropdown","marginTop","title","marginBottom","Logout","getCroppedImg","image","crop","fileName","canvas","document","createElement","scaleX","naturalWidth","width","scaleY","naturalHeight","height","ctx","getContext","pixelRatio","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","toDataURL","src","imageCallback","closeHander","cropperRef","useRef","cropDetailsRef","clickHndler","current","name","croppedImage","zIndex","top","minWidth","maxWidth","Col","xs","URL","createObjectURL","aspectRatio","guides","e","detail","ref","zoomable","movable","minCropBoxWidth","minCropBoxHeight","Button","type","UpdateProfile","useSelector","state","user","error","like","updateLoading","loading","updateError","message","setName","email","setEmail","bio","setBio","avatar","setAvatar","url","avatarPrev","showCropper","setShowCropper","cropImage","setCropImage","submitHandler","preventDefault","updateProfileUser","loadUser","useEffect","onSubmit","FormControl","onChange","target","files","accept","htmlFor","value","alt","borderRadius","CropImage","placeholder","required","disabled","propTypes","PropTypes","tooltip","as","Feedback","React","Component","props","_jsx","classNames","displayName","classes","bsPrefix","size","htmlSize","isValid","isInvalid","plaintext","readOnly","controlId","useContext","FormContext","useBootstrapPrefix","Object","assign"],"sourceRoot":""}